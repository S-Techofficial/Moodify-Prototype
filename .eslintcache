[{"E:\\S-Tech\\Web Development\\moodify\\src\\components\\CurrentSection.js":"1","E:\\S-Tech\\Web Development\\moodify\\src\\components\\LoginPage.js":"2","E:\\S-Tech\\Web Development\\moodify\\src\\components\\player\\SleepTimer.js":"3","E:\\S-Tech\\Web Development\\moodify\\src\\components\\player\\MusicArt.js":"4","E:\\S-Tech\\Web Development\\moodify\\src\\reportWebVitals.js":"5","E:\\S-Tech\\Web Development\\moodify\\src\\components\\sections\\SettingsPage.js":"6","E:\\S-Tech\\Web Development\\moodify\\src\\components\\header\\AutoSearchResult.js":"7","E:\\S-Tech\\Web Development\\moodify\\src\\components\\player\\TimelineController.js":"8","E:\\S-Tech\\Web Development\\moodify\\src\\components\\AppContainer.js":"9","E:\\S-Tech\\Web Development\\moodify\\src\\components\\RenderDatabase.js":"10","E:\\S-Tech\\Web Development\\moodify\\src\\components\\player\\NextButton.js":"11","E:\\S-Tech\\Web Development\\moodify\\src\\components\\player\\VolumeController.js":"12","E:\\S-Tech\\Web Development\\moodify\\src\\components\\GlobalState.js":"13","E:\\S-Tech\\Web Development\\moodify\\src\\apis\\getAudioLink.js":"14","E:\\S-Tech\\Web Development\\moodify\\src\\external\\saveCountry.js":"15","E:\\S-Tech\\Web Development\\moodify\\src\\components\\player\\PlayPauseButton.js":"16","E:\\S-Tech\\Web Development\\moodify\\src\\components\\App.js":"17","E:\\S-Tech\\Web Development\\moodify\\src\\components\\header\\SearchBox.js":"18","E:\\S-Tech\\Web Development\\moodify\\src\\apis\\youtubeSearch.js":"19","E:\\S-Tech\\Web Development\\moodify\\src\\components\\RelatedVideos.js":"20"},{"size":8206,"mtime":1606807923532,"results":"21","hashOfConfig":"22"},{"size":967,"mtime":1606807581624,"results":"23","hashOfConfig":"22"},{"size":3941,"mtime":1606747009836,"results":"24","hashOfConfig":"22"},{"size":4139,"mtime":1606738845315,"results":"25","hashOfConfig":"22"},{"size":364,"mtime":499162500000,"results":"26","hashOfConfig":"22"},{"size":2712,"mtime":1606438396007,"results":"27","hashOfConfig":"22"},{"size":671,"mtime":1606438395571,"results":"28","hashOfConfig":"22"},{"size":2776,"mtime":1606741064831,"results":"29","hashOfConfig":"22"},{"size":1809,"mtime":1606740236809,"results":"30","hashOfConfig":"22"},{"size":6816,"mtime":1606438395480,"results":"31","hashOfConfig":"22"},{"size":344,"mtime":1606438395726,"results":"32","hashOfConfig":"22"},{"size":680,"mtime":1606438395847,"results":"33","hashOfConfig":"22"},{"size":1415,"mtime":1606438395386,"results":"34","hashOfConfig":"22"},{"size":144,"mtime":1606438395225,"results":"35","hashOfConfig":"22"},{"size":477,"mtime":1606438396052,"results":"36","hashOfConfig":"22"},{"size":1441,"mtime":1606438395743,"results":"37","hashOfConfig":"22"},{"size":279,"mtime":1606804327861,"results":"38","hashOfConfig":"22"},{"size":5454,"mtime":1606438395590,"results":"39","hashOfConfig":"22"},{"size":619,"mtime":1606438395275,"results":"40","hashOfConfig":"22"},{"size":3473,"mtime":1606438395463,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},"lu035w",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"45"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"45"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\S-Tech\\Web Development\\moodify\\src\\components\\CurrentSection.js",["89","90","91"],"import React, {\n  useContext,\n  useState,\n  useEffect,\n  useCallback,\n  Suspense,\n  lazy\n} from \"react\";\n\nimport {\n  BrowserRouter as Router,\n  withRouter,\n  Route,\n  Link,\n  Switch\n} from \"react-router-dom\";\n\nimport { AnimatePresence } from \"framer-motion\";\n\nimport {\n  Tabs,\n  Tab,\n  withStyles,\n  Grid,\n  CircularProgress\n} from \"@material-ui/core\";\n\n\nimport {\n  Home,\n  Favorite,\n  History,\n  GetApp\n} from \"@material-ui/icons/\";\n\nimport { GlobalContext } from \"./GlobalState\";\nimport {\n  getHistory,\n  getLikedSongs,\n  getDownloadedSongs,\n  removeDownloadingState,\n  db\n} from \"../external/saveSong\";\n\nimport SettingsPage from \"./sections/SettingsPage\";\n// import the db from save song\nimport MainPlayer from \"../components/player/MainPlayer\";\n// pages\nconst LoginPage = lazy(() => import(\"./LoginPage\"));\nconst RenderDatabase = lazy(() => import(\"./RenderDatabase\"));\nconst SearchResult = lazy(() => import(\"./SearchResult\"));\nconst HomePage = lazy(() => import(\"./sections/HomePage\"));\n\n\n// custom styling the tab menus\nconst CustomTab = withStyles({\n  root: {\n    background: \"#3f51b5\",\n    position: \"fixed\",\n    bottom: \"0\",\n    padding: 0,\n    width: \"100%\",\n    zIndex: 1300\n  },\n  indicator: {\n    display: \"none\"\n  },\n  labelIcon: {\n    margin: 0\n  }\n})(Tabs);\n\nconst CustomTabs = withStyles({\n  root: {\n    color: \"#00b0ff\",\n    fontSize: \".75rem\",\n    margin: 0,\n\n    \"&:hover\": {\n      color: \"#ffffffed\",\n      opacity: 1\n    },\n    \"&$selected\": {\n      color: \"#fff\"\n    },\n    \"&:focus\": {\n      color: \"#FFFFFF\"\n    }\n  },\n\n  selected: {}\n})(Tab);\n\nlet deferredPrompt = undefined;\nlet previousLocation;\n\nwindow.addEventListener(\"beforeinstallprompt\", e => {\n  // Stash the event so it can be triggered later.\n  deferredPrompt = e;\n});\n\nconst CurrentSection = ({ history, location }) => {\n  const [{ currentVideoSnippet, searchResult }] = useContext(GlobalContext);\n  console.log(currentVideoSnippet);\n\n  const [songsHistoryState, setSongsHistory] = useState([]);\n  const [songsLikedState, setSongsLiked] = useState([]);\n  const [songsDownloadedState, setSongsDownloaded] = useState([]);\n  const [tabValue, setTabValue] = useState(0);\n  const [updateCount, setUpdateCount] = useState(0);\n  const [redirectState, setRedirectState] = useState(null);\n\n  const circularLoader = (\n    <Grid\n      style={{ height: \"100vh\" }}\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n    >\n      <CircularProgress />\n    </Grid>\n  );\n\n  function handleChange(event, newValue) {\n    setTabValue(newValue);\n  }\n\n  const fetchSongs = useCallback(async () => {\n    //it's same as the orders of our tabs\n    switch (tabValue) {\n      case 1:\n        setSongsLiked(await getLikedSongs());\n        break;\n\n      case 2:\n        setSongsDownloaded(await getDownloadedSongs());\n        break;\n\n      case 3:\n        setSongsHistory(await getHistory());\n        break;\n\n      default:\n        break;\n    }\n  }, [tabValue]);\n  //\n  useEffect(() => {\n    fetchSongs();\n  }, [tabValue, fetchSongs]);\n\n  useEffect(() => {\n    fetchSongs();\n    console.log(\"fetching the songs\");\n  }, [updateCount, fetchSongs]);\n\n  useEffect(() => {\n    db.on(\"changes\", () => {\n      setUpdateCount(c => c + 1);\n    });\n    // will remove all the songs which are downloading in the first place\n    removeDownloadingState();\n\n    const isThisNewUser = localStorage.getItem(\"isThisNew\");\n    if (isThisNewUser === \"no\") {\n      setRedirectState(true);\n    }\n    // if this is not a new user redirect it to home\n    previousLocation = location;\n    history.listen(location => {\n      if (location.pathname !== \"/play\") {\n        previousLocation = location;\n        console.log(previousLocation);\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    // we will redirect everytime user comes to root page\n    if (redirectState && history.location.pathname === \"/\") {\n      history.replace(\"/home\");\n    }\n\n    // if the location is not play then we will push new location\n  }, [setRedirectState, history, redirectState]);\n\n  const checkPrevLocation = () => {\n    if (location.pathname === \"/play\") {\n      return previousLocation;\n    } else {\n      return location;\n    }\n  };\n\n  // we will load the homepage with all the playlists\n  const continueToHome = () => {\n      localStorage.setItem(\"isThisNew\", \"no\");\n      history.replace(\"/home\");\n    \n\n    if (deferredPrompt) {\n      // show the prompt to install app\n      deferredPrompt.prompt();\n      // Wait for the user to respond to the prompt\n      deferredPrompt.userChoice.then(choiceResult => {\n        if (choiceResult.outcome === \"accepted\") {\n          console.log(\"User accepted the A2HS prompt\");\n        } else {\n          console.log(\"User dismissed the A2HS prompt\");\n        }\n        deferredPrompt = null;\n      });\n    }\n  };\n\n  const returnMainPlayer = props => {\n    // we will return the main player if the path is not the \"/\"\n\n    if (window.location.pathname !== \"/\") {\n      return <MainPlayer  {...props} />;\n    } else {\n      return null;\n    }\n  };\n\n  // the set tab value will keep the tab active on their route\n  // there are 4 tabs so there will be 3 indexes\n  return (\n    <div>\n      <Suspense fallback={circularLoader}>\n        <Switch location={checkPrevLocation()}>\n          <Route\n            exact\n            path=\"/\"\n            render={props => {\n              return <LoginPage continueToHome={continueToHome} />;\n            }}\n          />\n          <Route\n            path=\"/search\"\n            render={props => <SearchResult videos={searchResult} />}\n          />\n          <Route\n            path=\"/home\"\n            render={props => {\n              setTabValue(0);\n              return <HomePage />;\n            }}\n          />\n          <Route\n            path=\"/liked\"\n            render={props => {\n              setTabValue(1);\n              return (\n                <RenderDatabase\n                  songs={songsLikedState}\n                  {...props}\n                  key={location.pathname}\n                />\n              );\n            }}\n          />\n          <Route\n            path=\"/downloads\"\n            render={props => {\n              setTabValue(2);\n              return (\n                <RenderDatabase\n                  songs={songsDownloadedState}\n                  key={location.pathname}\n                />\n              );\n            }}\n          />\n          <Route\n            path=\"/history\"\n            render={props => {\n              setTabValue(3);\n              return (\n                <RenderDatabase\n                  songs={songsHistoryState}\n                  key={location.pathname}\n                />\n              );\n            }}\n          />\n          <Route\n            path=\"/app\"\n            render={props => {\n              window.location.replace(\n                \"https://play.google.com/store/apps/details?id=com.ylightmusic.app\"\n              );\n              return <div>Redirecting you to play store</div>;\n            }}\n          />\n\n          <Route path=\"/settings\" component={SettingsPage} />\n        </Switch>\n        <Route path=\"/\" render={props => returnMainPlayer(props)} />\n\n        <div style={{ height: currentVideoSnippet.id ? \"100px\" : \"50px\" }} />\n      </Suspense>\n      {/* if the player is on then return 100px else 50px*/}\n      <CustomTab\n        value={tabValue}\n        onChange={handleChange}\n        variant=\"fullWidth\"\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n      >\n        <CustomTabs\n          icon={<Home />}\n          aria-label=\"Home\"\n          component={Link}\n          to=\"/home\"\n          label=\"Home\"\n        />\n\n        <CustomTabs\n          icon={<Favorite />}\n          aria-label=\"Liked\"\n          component={Link}\n          to=\"/liked\"\n          label=\"Liked\"\n        />\n\n        <CustomTabs\n          icon={<GetApp />}\n          aria-label=\"Downloads\"\n          component={Link}\n          to=\"/downloads\"\n          label=\"Downloads\"\n        />\n        <CustomTabs\n          icon={<History />}\n          aria-label=\"History\"\n          component={Link}\n          to=\"/history\"\n          label=\"History\"\n        />\n      </CustomTab>\n    </div>\n  );\n};\n\nexport default withRouter(CurrentSection);\n",["92","93"],"E:\\S-Tech\\Web Development\\moodify\\src\\components\\LoginPage.js",[],"E:\\S-Tech\\Web Development\\moodify\\src\\components\\player\\SleepTimer.js",["94","95","96","97"],"E:\\S-Tech\\Web Development\\moodify\\src\\components\\player\\MusicArt.js",[],["98","99"],"E:\\S-Tech\\Web Development\\moodify\\src\\reportWebVitals.js",[],"E:\\S-Tech\\Web Development\\moodify\\src\\components\\sections\\SettingsPage.js",[],"E:\\S-Tech\\Web Development\\moodify\\src\\components\\header\\AutoSearchResult.js",[],"E:\\S-Tech\\Web Development\\moodify\\src\\components\\player\\TimelineController.js",["100","101"],"E:\\S-Tech\\Web Development\\moodify\\src\\components\\AppContainer.js",["102","103"],"import React, { useEffect, useContext } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport SimpleAppBar from \"./header/SimpleAppBar\";\nimport SwipeMenu from \"./SwipeMenu\";\nimport CurrentSection from \"./CurrentSection\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport { indigo } from \"@material-ui/core/colors\";\n\nimport { useCheckDarkmode } from \"./sections/SettingsPage\";\nimport { GlobalContext } from \"./GlobalState\";\n\nconst body = document.querySelector(\"body\");\n\nconst defaultTheme = {\n  palette: {\n    primary: indigo,\n    secondary: {\n      main: \"#000000\"\n    }\n  },\n  typography: {\n    useNextVariants: true\n  }\n};\n\nconst darkTheme = {\n  palette: {\n    type: \"dark\",\n    primary: indigo,\n    secondary: {\n      main: \"#ffffff\"\n    }\n  },\n  typography: {\n    useNextVariants: true\n  }\n};\n\nconst muiDarkTheme = createMuiTheme(darkTheme);\nconst muiDefaultTheme = createMuiTheme(defaultTheme);\n\nconst AppContainer = () => {\n  const [{ themeSelectValue }, dispatch] = useContext(GlobalContext);\n\n  const { checkDarkMode } = useCheckDarkmode();\n\n  useEffect(() => {\n    checkDarkMode();\n\n    if (navigator.userAgent.match(/Android/i)) {\n      body.style.overscrollBehavior = \"none\";\n      // this is to disable pull refresh on android\n    }\n  }, []);\n\n  useEffect(() => {\n    if (themeSelectValue === \"Dark\") {\n      body.classList.add(\"dark\");\n    } else {\n      body.classList.remove(\"dark\");\n    }\n  }, [themeSelectValue]);\n\n  return (\n    <MuiThemeProvider\n      theme={themeSelectValue === \"Dark\" ? muiDarkTheme : muiDefaultTheme}\n    >\n      <Router>\n        <SimpleAppBar />\n        <Route component={CurrentSection} />\n\n        <SwipeMenu />\n      </Router>\n       \n    </MuiThemeProvider>\n  );\n};\nexport default AppContainer;\n","E:\\S-Tech\\Web Development\\moodify\\src\\components\\RenderDatabase.js",["104","105","106","107","108","109"],"import React, { useContext, useState, useEffect } from \"react\";\n// import {\n//   List,\n//   AutoSizer,\n//   CellMeasurer,\n//   CellMeasurerCache\n// } from \"react-virtualized\";\n\nimport { DynamicSizeList as List } from \"react-window-dynamic\";\n\n\nimport CompletedTick from \"../images/CompletedTick.svg\";\nimport DownloadIcon from \"../images/DownloadIcon.svg\";\n\nimport {\n  ListItem,\n  Typography,\n  ListItemAvatar,\n  Avatar,\n  Divider,\n  ListItemText\n} from \"@material-ui/core\";\n\nimport DownloadDeleteDialog from \"./DownloadDeleteDialog\";\n\nimport { GlobalContext } from \"./GlobalState\";\n\nimport getAudioLink from \"../apis/getAudioLink\";\nimport { downloadSong, deleteSongAudio } from \"../external/saveSong\";\n\n// const cache = new CellMeasurerCache({\n//   minHeight: 50,\n//   defaultHeight: 60,\n//   fixedWidth: true\n//   // keyMapper: () => 1\n// });\n\nlet currentId;\n\nexport const useSongMethods = songId => {\n  const [{}, dispatch] = useContext(GlobalContext);\n\n  const setSnackbarMsg = React.useCallback(\n    data => {\n      dispatch({ type: \"setSnackbarMsg\", snippet: data });\n    },\n    [dispatch]\n  );\n\n  const [deleteDialogState, setDeleteDialogState] = useState(false);\n  const [dontAskPopup, setDontAskPopup] = useState(null);\n\n  useEffect(() => {\n    //convert string to bool\n    const popupLocalState = localStorage.getItem(\"dontAskPopup\") === \"true\";\n    setDontAskPopup(popupLocalState);\n    // for popup settings\n  }, []);\n\n  const handleDownload = async songId => {\n    // console.log(\"here is the id\", songId);\n    const res = await getAudioLink.get(\"/song\", {\n      params: { id: songId }\n    });\n    // first we will fetch the song link then we will download it\n    // the download song function takes id and the url\n    const status = await downloadSong(songId, res.data);\n    // after the downloading is done we will remove the downloading class\n    // set the snackbar message\n    setSnackbarMsg(\"Song Downloaded\");\n    console.log(\"song status\", status);\n  };\n\n  const disablePopup = () => {\n    localStorage.setItem(\"dontAskPopup\", true);\n    setDontAskPopup(true);\n  };\n\n  const deleteTheSong = async checkBox => {\n    const deleted = await deleteSongAudio(currentId);\n    setDeleteDialogState(false);\n    setSnackbarMsg(\"Deleted Successfully\");\n\n    console.log(currentId, checkBox);\n    // we will set it to localstorage the popup option\n    if (checkBox) {\n      disablePopup();\n    }\n  };\n\n  // hadnling download dialog\n  const handleRemoveSong = songId => {\n    console.log(\"handle remove dude\");\n    currentId = songId;\n    // when user clicks on the download badge we will check the state\n    // then delete the song without showing the popup if dontAskPopup is true\n    // and delete the song by calling deleteTheSong\n    dontAskPopup ? deleteTheSong() : setDeleteDialogState(true);\n  };\n\n  const deleteDialogComponent = dontAskPopup ? null : (\n    <DownloadDeleteDialog\n      isOpen={deleteDialogState}\n      handleCancel={() => setDeleteDialogState(false)} // we will just hide the dialog on cancel\n      handleDelete={deleteTheSong} //if user wants to delete the song we will just do it\n    />\n  );\n\n  return {\n    handleDownload,\n    handleRemoveSong,\n    deleteTheSong,\n    dontAskPopup,\n    setDeleteDialogState,\n    deleteDialogState,\n    deleteDialogComponent\n  };\n};\n\nconst RenderDatabase = props => {\n  const songs = props.songs;\n  const [{}, dispatch] = useContext(GlobalContext);\n  const setCurrentVideoSnippet = data => {\n    dispatch({ type: \"setCurrentVideoSnippet\", snippet: data });\n  };\n  const setSnackbarMsg = data => {\n    dispatch({ type: \"setSnakbarMsg\", snippet: data });\n  };\n\n  const [windowHeight, setWindowHeight] = useState(window.innerHeight);\n\n  const handleClick = song => {\n    // set all the info of current clicked video in this object\n    setCurrentVideoSnippet({\n      id: song.videoId,\n      audio: song.audio,\n      thumbnail: song.thumbnail,\n      title: song.title,\n      channelTitle: song.channelTitle,\n      maxThumbnail: `https://img.youtube.com/vi/${song.videoId}/maxresdefault.jpg`,\n      sdThumbnail: `https://img.youtube.com/vi/${song.videoId}/sddefault.jpg`\n      // this is the url of the max resolution of thumbnail\n    });\n  };\n\n  const {\n    handleDownload,\n    handleRemoveSong,\n    deleteDialogComponent\n  } = useSongMethods();\n\n  const returnAnimatedClass = song => {\n    if (song.downloadState === \"downloading\") {\n      console.log(song.downloadState);\n      return \"downloading-animation\";\n    } else {\n      return \"\";\n    }\n  };\n\n\n\n\n  useEffect(() => {\n    setWindowHeight(window.innerHeight);\n  });\n\n  const renderResult = songs.map((song, index) => {\n    return (\n      <>\n        <ListItem\n          alignItems=\"flex-start\"\n          button\n          onClick={() => handleClick(song)}\n          // component={Link}\n          // to={{ pathname: \"/play\", search: `?id=${song.videoId}`, state: { modal: true } }}\n        >\n          <ListItemAvatar>\n            <Avatar\n              className=\"searchThumb\"\n              style={{ width: \"60px\", height: \"60px\", marginRight: \"15px\" }}\n              alt={song.title}\n              src={`https://img.youtube.com/vi/${song.videoId}/default.jpg`}\n            />\n          </ListItemAvatar>\n          {/* we will play the song when clicked on title */}\n          <ListItemText\n            primary={song.title}\n            secondary={\n              <React.Fragment>\n                <Typography\n                  component=\"span\"\n                  variant=\"body2\"\n                  color=\"textPrimary\"\n                >\n                  {song.channelTitle}\n                </Typography>\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n        <div\n          className=\"download-container\"\n          onClick={() =>\n            song.audio\n              ? handleRemoveSong(song.videoId)\n              : handleDownload(song.videoId)\n          }\n        >\n          <div className=\"badge-container\">\n            {/* if there is audio file then we will show tick mark icon */}\n            <img\n              className={returnAnimatedClass(song)}\n              src={song.audio ? CompletedTick : DownloadIcon}\n              alt=\"downloading icon\"\n            />\n          </div>\n        </div>\n      </>\n    );\n  });\n\n  const renderItem = React.forwardRef((row, ref) => (\n    <div\n      ref={ref}\n      style={{\n        ...row.style,\n        maxWidth: \"1000px\",\n        left: \"50%\",\n        transform: \"translateX(-50%)\"\n      }}\n    >\n      {renderResult[row.index]}\n      <Divider />\n    </div>\n  ));\n  return (\n    <>\n      {deleteDialogComponent}\n\n      <List\n        height={window.innerHeight - 100}\n        itemCount={songs.length}\n        width={window.innerWidth}\n      >\n        {renderItem}\n      </List>\n    </>\n  );\n};\n\nexport default RenderDatabase;\n","E:\\S-Tech\\Web Development\\moodify\\src\\components\\player\\NextButton.js",[],["110","111"],"E:\\S-Tech\\Web Development\\moodify\\src\\components\\player\\VolumeController.js",["112"],"import React, { useState } from \"react\";\nimport { IconButton, Grid, Slider } from \"@material-ui/core/\";\nimport { VolumeUp } from \"@material-ui/icons/\";\n\nconst VolumeController = ({ player, setPlayerState }) => {\n  const [volume, setVolume] = useState(100);\n\n  const volumeChange = (e, newVal) => {\n    setVolume(newVal);\n    player.volume = newVal / 100;\n    //\n  };\n\n\n  return (\n\n      <Grid container spacing={1} style={{ maxWidth: \"200px\" }}>\n        <Grid item>\n          <VolumeUp color=\"primary\" />\n        </Grid>\n        <Grid item xs={3}>\n          <Slider value={volume} onChange={volumeChange} />\n        </Grid>\n      </Grid>\n  );\n};\n\nexport default VolumeController;\n","E:\\S-Tech\\Web Development\\moodify\\src\\components\\GlobalState.js",[],"E:\\S-Tech\\Web Development\\moodify\\src\\apis\\getAudioLink.js",[],"E:\\S-Tech\\Web Development\\moodify\\src\\external\\saveCountry.js",[],"E:\\S-Tech\\Web Development\\moodify\\src\\components\\player\\PlayPauseButton.js",["113"],"E:\\S-Tech\\Web Development\\moodify\\src\\components\\App.js",[],"E:\\S-Tech\\Web Development\\moodify\\src\\components\\header\\SearchBox.js",["114"],"E:\\S-Tech\\Web Development\\moodify\\src\\apis\\youtubeSearch.js",[],"E:\\S-Tech\\Web Development\\moodify\\src\\components\\RelatedVideos.js",["115","116","117","118"],{"ruleId":"119","severity":1,"message":"120","line":11,"column":20,"nodeType":"121","messageId":"122","endLine":11,"endColumn":26},{"ruleId":"119","severity":1,"message":"123","line":18,"column":10,"nodeType":"121","messageId":"122","endLine":18,"endColumn":25},{"ruleId":"124","severity":1,"message":"125","line":176,"column":6,"nodeType":"126","endLine":176,"endColumn":8,"suggestions":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"119","severity":1,"message":"132","line":1,"column":38,"nodeType":"121","messageId":"122","endLine":1,"endColumn":49},{"ruleId":"119","severity":1,"message":"133","line":8,"column":3,"nodeType":"121","messageId":"122","endLine":8,"endColumn":14},{"ruleId":"119","severity":1,"message":"134","line":9,"column":3,"nodeType":"121","messageId":"122","endLine":9,"endColumn":14},{"ruleId":"124","severity":1,"message":"135","line":62,"column":6,"nodeType":"126","endLine":62,"endColumn":8,"suggestions":"136"},{"ruleId":"128","replacedBy":"137"},{"ruleId":"130","replacedBy":"138"},{"ruleId":"119","severity":1,"message":"139","line":64,"column":10,"nodeType":"121","messageId":"122","endLine":64,"endColumn":15},{"ruleId":"119","severity":1,"message":"140","line":64,"column":17,"nodeType":"121","messageId":"122","endLine":64,"endColumn":25},{"ruleId":"119","severity":1,"message":"141","line":44,"column":32,"nodeType":"121","messageId":"122","endLine":44,"endColumn":40},{"ruleId":"124","severity":1,"message":"142","line":55,"column":6,"nodeType":"126","endLine":55,"endColumn":8,"suggestions":"143"},{"ruleId":"144","severity":1,"message":"145","line":41,"column":10,"nodeType":"146","messageId":"147","endLine":41,"endColumn":12},{"ruleId":"119","severity":1,"message":"148","line":80,"column":11,"nodeType":"121","messageId":"122","endLine":80,"endColumn":18},{"ruleId":"144","severity":1,"message":"145","line":122,"column":10,"nodeType":"146","messageId":"147","endLine":122,"endColumn":12},{"ruleId":"119","severity":1,"message":"149","line":126,"column":9,"nodeType":"121","messageId":"122","endLine":126,"endColumn":23},{"ruleId":"119","severity":1,"message":"150","line":130,"column":10,"nodeType":"121","messageId":"122","endLine":130,"endColumn":22},{"ruleId":"124","severity":1,"message":"151","line":164,"column":3,"nodeType":"121","endLine":164,"endColumn":12,"suggestions":"152"},{"ruleId":"128","replacedBy":"153"},{"ruleId":"130","replacedBy":"154"},{"ruleId":"119","severity":1,"message":"155","line":2,"column":10,"nodeType":"121","messageId":"122","endLine":2,"endColumn":20},{"ruleId":"119","severity":1,"message":"156","line":1,"column":17,"nodeType":"121","messageId":"122","endLine":1,"endColumn":25},{"ruleId":"124","severity":1,"message":"157","line":126,"column":6,"nodeType":"126","endLine":126,"endColumn":40,"suggestions":"158"},{"ruleId":"119","severity":1,"message":"159","line":1,"column":29,"nodeType":"121","messageId":"122","endLine":1,"endColumn":38},{"ruleId":"119","severity":1,"message":"160","line":2,"column":10,"nodeType":"121","messageId":"122","endLine":2,"endColumn":14},{"ruleId":"119","severity":1,"message":"161","line":12,"column":3,"nodeType":"121","messageId":"122","endLine":12,"endColumn":10},{"ruleId":"144","severity":1,"message":"145","line":52,"column":10,"nodeType":"146","messageId":"147","endLine":52,"endColumn":12},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'AnimatePresence' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'location'. Either include them or remove the dependency array.","ArrayExpression",["162"],"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"'useCallback' is defined but never used.","'FormControl' is defined but never used.","'DialogTitle' is defined but never used.","React Hook useEffect has a missing dependency: 'setTimer'. Either include it or remove the dependency array.",["165"],["163"],["164"],"'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'checkDarkMode'. Either include it or remove the dependency array.",["166"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'deleted' is assigned a value but never used.","'setSnackbarMsg' is assigned a value but never used.","'windowHeight' is assigned a value but never used.","React Hook useEffect contains a call to 'setWindowHeight'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["167"],["163"],["164"],"'IconButton' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'params'. Either include it or remove the dependency array.",["168"],"'useEffect' is defined but never used.","'Link' is defined but never used.","'Divider' is defined but never used.",{"desc":"169","fix":"170"},"no-global-assign","no-unsafe-negation",{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},"Update the dependencies array to be: [history, location]",{"range":"179","text":"180"},"Update the dependencies array to be: [setTimer]",{"range":"181","text":"182"},"Update the dependencies array to be: [checkDarkMode]",{"range":"183","text":"184"},"Add dependencies array: []",{"range":"185","text":"186"},"Update the dependencies array to be: [params, setSearchState, setYtSearchQuery]",{"range":"187","text":"188"},[3707,3709],"[history, location]",[1738,1740],"[setTimer]",[1320,1322],"[checkDarkMode]",[4582,4582],", []",[3515,3549],"[params, setSearchState, setYtSearchQuery]"]