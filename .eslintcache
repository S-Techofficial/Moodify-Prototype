[{"E:\\S-Tech\\Web Development\\moodify\\src\\components\\CurrentSection.js":"1","E:\\S-Tech\\Web Development\\moodify\\src\\components\\LoginPage.js":"2","E:\\S-Tech\\Web Development\\moodify\\src\\components\\player\\SleepTimer.js":"3","E:\\S-Tech\\Web Development\\moodify\\src\\components\\player\\MusicArt.js":"4","E:\\S-Tech\\Web Development\\moodify\\src\\reportWebVitals.js":"5","E:\\S-Tech\\Web Development\\moodify\\src\\components\\sections\\SettingsPage.js":"6","E:\\S-Tech\\Web Development\\moodify\\src\\components\\header\\AutoSearchResult.js":"7","E:\\S-Tech\\Web Development\\moodify\\src\\components\\player\\TimelineController.js":"8","E:\\S-Tech\\Web Development\\moodify\\src\\components\\AppContainer.js":"9","E:\\S-Tech\\Web Development\\moodify\\src\\components\\RenderDatabase.js":"10","E:\\S-Tech\\Web Development\\moodify\\src\\components\\player\\NextButton.js":"11","E:\\S-Tech\\Web Development\\moodify\\src\\components\\player\\VolumeController.js":"12","E:\\S-Tech\\Web Development\\moodify\\src\\components\\GlobalState.js":"13","E:\\S-Tech\\Web Development\\moodify\\src\\apis\\getAudioLink.js":"14","E:\\S-Tech\\Web Development\\moodify\\src\\external\\saveCountry.js":"15","E:\\S-Tech\\Web Development\\moodify\\src\\components\\player\\PlayPauseButton.js":"16","E:\\S-Tech\\Web Development\\moodify\\src\\components\\App.js":"17","E:\\S-Tech\\Web Development\\moodify\\src\\components\\header\\SearchBox.js":"18","E:\\S-Tech\\Web Development\\moodify\\src\\apis\\youtubeSearch.js":"19","E:\\S-Tech\\Web Development\\moodify\\src\\components\\RelatedVideos.js":"20","E:\\S-Tech\\Web Development\\moodify\\src\\components\\SearchResult.js":"21","E:\\S-Tech\\Web Development\\moodify\\src\\components\\sections\\SongCard.js":"22","E:\\S-Tech\\Web Development\\moodify\\src\\components\\player\\MiniMusicArt.js":"23","E:\\S-Tech\\Web Development\\moodify\\src\\components\\SwipeMenu.js":"24","E:\\S-Tech\\Web Development\\moodify\\src\\components\\header\\SimpleAppBar.js":"25","E:\\S-Tech\\Web Development\\moodify\\src\\external\\saveSong.js":"26","E:\\S-Tech\\Web Development\\moodify\\src\\serviceWorkerRegistration.js":"27","E:\\S-Tech\\Web Development\\moodify\\src\\components\\player\\TopBar.js":"28"},{"size":8206,"mtime":1606807923532,"results":"29","hashOfConfig":"30"},{"size":967,"mtime":1606807581624,"results":"31","hashOfConfig":"30"},{"size":3941,"mtime":1606747009836,"results":"32","hashOfConfig":"30"},{"size":4139,"mtime":1606738845315,"results":"33","hashOfConfig":"30"},{"size":364,"mtime":499162500000,"results":"34","hashOfConfig":"30"},{"size":2712,"mtime":1606438396007,"results":"35","hashOfConfig":"30"},{"size":671,"mtime":1606438395571,"results":"36","hashOfConfig":"30"},{"size":2776,"mtime":1606741064831,"results":"37","hashOfConfig":"30"},{"size":1809,"mtime":1606740236809,"results":"38","hashOfConfig":"30"},{"size":6816,"mtime":1606438395480,"results":"39","hashOfConfig":"30"},{"size":344,"mtime":1606438395726,"results":"40","hashOfConfig":"30"},{"size":680,"mtime":1606438395847,"results":"41","hashOfConfig":"30"},{"size":1415,"mtime":1606438395386,"results":"42","hashOfConfig":"30"},{"size":144,"mtime":1606823034494,"results":"43","hashOfConfig":"30"},{"size":477,"mtime":1606438396052,"results":"44","hashOfConfig":"30"},{"size":1441,"mtime":1606438395743,"results":"45","hashOfConfig":"30"},{"size":279,"mtime":1606804327861,"results":"46","hashOfConfig":"30"},{"size":5454,"mtime":1606438395590,"results":"47","hashOfConfig":"30"},{"size":619,"mtime":1606438395275,"results":"48","hashOfConfig":"30"},{"size":3473,"mtime":1606438395463,"results":"49","hashOfConfig":"30"},{"size":3151,"mtime":1606438395499,"results":"50","hashOfConfig":"30"},{"size":2745,"mtime":1606747149966,"results":"51","hashOfConfig":"30"},{"size":1463,"mtime":1606438395671,"results":"52","hashOfConfig":"30"},{"size":4617,"mtime":1606811805260,"results":"53","hashOfConfig":"30"},{"size":2444,"mtime":1606730084389,"results":"54","hashOfConfig":"30"},{"size":3695,"mtime":1606822851512,"results":"55","hashOfConfig":"30"},{"size":5064,"mtime":499162500000,"results":"56","hashOfConfig":"30"},{"size":2425,"mtime":1606744904527,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},"lu035w",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"75"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"69"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"69"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\S-Tech\\Web Development\\moodify\\src\\components\\CurrentSection.js",["130","131","132"],"import React, {\n  useContext,\n  useState,\n  useEffect,\n  useCallback,\n  Suspense,\n  lazy\n} from \"react\";\n\nimport {\n  BrowserRouter as Router,\n  withRouter,\n  Route,\n  Link,\n  Switch\n} from \"react-router-dom\";\n\nimport { AnimatePresence } from \"framer-motion\";\n\nimport {\n  Tabs,\n  Tab,\n  withStyles,\n  Grid,\n  CircularProgress\n} from \"@material-ui/core\";\n\n\nimport {\n  Home,\n  Favorite,\n  History,\n  GetApp\n} from \"@material-ui/icons/\";\n\nimport { GlobalContext } from \"./GlobalState\";\nimport {\n  getHistory,\n  getLikedSongs,\n  getDownloadedSongs,\n  removeDownloadingState,\n  db\n} from \"../external/saveSong\";\n\nimport SettingsPage from \"./sections/SettingsPage\";\n// import the db from save song\nimport MainPlayer from \"../components/player/MainPlayer\";\n// pages\nconst LoginPage = lazy(() => import(\"./LoginPage\"));\nconst RenderDatabase = lazy(() => import(\"./RenderDatabase\"));\nconst SearchResult = lazy(() => import(\"./SearchResult\"));\nconst HomePage = lazy(() => import(\"./sections/HomePage\"));\n\n\n// custom styling the tab menus\nconst CustomTab = withStyles({\n  root: {\n    background: \"#3f51b5\",\n    position: \"fixed\",\n    bottom: \"0\",\n    padding: 0,\n    width: \"100%\",\n    zIndex: 1300\n  },\n  indicator: {\n    display: \"none\"\n  },\n  labelIcon: {\n    margin: 0\n  }\n})(Tabs);\n\nconst CustomTabs = withStyles({\n  root: {\n    color: \"#00b0ff\",\n    fontSize: \".75rem\",\n    margin: 0,\n\n    \"&:hover\": {\n      color: \"#ffffffed\",\n      opacity: 1\n    },\n    \"&$selected\": {\n      color: \"#fff\"\n    },\n    \"&:focus\": {\n      color: \"#FFFFFF\"\n    }\n  },\n\n  selected: {}\n})(Tab);\n\nlet deferredPrompt = undefined;\nlet previousLocation;\n\nwindow.addEventListener(\"beforeinstallprompt\", e => {\n  // Stash the event so it can be triggered later.\n  deferredPrompt = e;\n});\n\nconst CurrentSection = ({ history, location }) => {\n  const [{ currentVideoSnippet, searchResult }] = useContext(GlobalContext);\n  console.log(currentVideoSnippet);\n\n  const [songsHistoryState, setSongsHistory] = useState([]);\n  const [songsLikedState, setSongsLiked] = useState([]);\n  const [songsDownloadedState, setSongsDownloaded] = useState([]);\n  const [tabValue, setTabValue] = useState(0);\n  const [updateCount, setUpdateCount] = useState(0);\n  const [redirectState, setRedirectState] = useState(null);\n\n  const circularLoader = (\n    <Grid\n      style={{ height: \"100vh\" }}\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n    >\n      <CircularProgress />\n    </Grid>\n  );\n\n  function handleChange(event, newValue) {\n    setTabValue(newValue);\n  }\n\n  const fetchSongs = useCallback(async () => {\n    //it's same as the orders of our tabs\n    switch (tabValue) {\n      case 1:\n        setSongsLiked(await getLikedSongs());\n        break;\n\n      case 2:\n        setSongsDownloaded(await getDownloadedSongs());\n        break;\n\n      case 3:\n        setSongsHistory(await getHistory());\n        break;\n\n      default:\n        break;\n    }\n  }, [tabValue]);\n  //\n  useEffect(() => {\n    fetchSongs();\n  }, [tabValue, fetchSongs]);\n\n  useEffect(() => {\n    fetchSongs();\n    console.log(\"fetching the songs\");\n  }, [updateCount, fetchSongs]);\n\n  useEffect(() => {\n    db.on(\"changes\", () => {\n      setUpdateCount(c => c + 1);\n    });\n    // will remove all the songs which are downloading in the first place\n    removeDownloadingState();\n\n    const isThisNewUser = localStorage.getItem(\"isThisNew\");\n    if (isThisNewUser === \"no\") {\n      setRedirectState(true);\n    }\n    // if this is not a new user redirect it to home\n    previousLocation = location;\n    history.listen(location => {\n      if (location.pathname !== \"/play\") {\n        previousLocation = location;\n        console.log(previousLocation);\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    // we will redirect everytime user comes to root page\n    if (redirectState && history.location.pathname === \"/\") {\n      history.replace(\"/home\");\n    }\n\n    // if the location is not play then we will push new location\n  }, [setRedirectState, history, redirectState]);\n\n  const checkPrevLocation = () => {\n    if (location.pathname === \"/play\") {\n      return previousLocation;\n    } else {\n      return location;\n    }\n  };\n\n  // we will load the homepage with all the playlists\n  const continueToHome = () => {\n      localStorage.setItem(\"isThisNew\", \"no\");\n      history.replace(\"/home\");\n    \n\n    if (deferredPrompt) {\n      // show the prompt to install app\n      deferredPrompt.prompt();\n      // Wait for the user to respond to the prompt\n      deferredPrompt.userChoice.then(choiceResult => {\n        if (choiceResult.outcome === \"accepted\") {\n          console.log(\"User accepted the A2HS prompt\");\n        } else {\n          console.log(\"User dismissed the A2HS prompt\");\n        }\n        deferredPrompt = null;\n      });\n    }\n  };\n\n  const returnMainPlayer = props => {\n    // we will return the main player if the path is not the \"/\"\n\n    if (window.location.pathname !== \"/\") {\n      return <MainPlayer  {...props} />;\n    } else {\n      return null;\n    }\n  };\n\n  // the set tab value will keep the tab active on their route\n  // there are 4 tabs so there will be 3 indexes\n  return (\n    <div>\n      <Suspense fallback={circularLoader}>\n        <Switch location={checkPrevLocation()}>\n          <Route\n            exact\n            path=\"/\"\n            render={props => {\n              return <LoginPage continueToHome={continueToHome} />;\n            }}\n          />\n          <Route\n            path=\"/search\"\n            render={props => <SearchResult videos={searchResult} />}\n          />\n          <Route\n            path=\"/home\"\n            render={props => {\n              setTabValue(0);\n              return <HomePage />;\n            }}\n          />\n          <Route\n            path=\"/liked\"\n            render={props => {\n              setTabValue(1);\n              return (\n                <RenderDatabase\n                  songs={songsLikedState}\n                  {...props}\n                  key={location.pathname}\n                />\n              );\n            }}\n          />\n          <Route\n            path=\"/downloads\"\n            render={props => {\n              setTabValue(2);\n              return (\n                <RenderDatabase\n                  songs={songsDownloadedState}\n                  key={location.pathname}\n                />\n              );\n            }}\n          />\n          <Route\n            path=\"/history\"\n            render={props => {\n              setTabValue(3);\n              return (\n                <RenderDatabase\n                  songs={songsHistoryState}\n                  key={location.pathname}\n                />\n              );\n            }}\n          />\n          <Route\n            path=\"/app\"\n            render={props => {\n              window.location.replace(\n                \"https://play.google.com/store/apps/details?id=com.ylightmusic.app\"\n              );\n              return <div>Redirecting you to play store</div>;\n            }}\n          />\n\n          <Route path=\"/settings\" component={SettingsPage} />\n        </Switch>\n        <Route path=\"/\" render={props => returnMainPlayer(props)} />\n\n        <div style={{ height: currentVideoSnippet.id ? \"100px\" : \"50px\" }} />\n      </Suspense>\n      {/* if the player is on then return 100px else 50px*/}\n      <CustomTab\n        value={tabValue}\n        onChange={handleChange}\n        variant=\"fullWidth\"\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n      >\n        <CustomTabs\n          icon={<Home />}\n          aria-label=\"Home\"\n          component={Link}\n          to=\"/home\"\n          label=\"Home\"\n        />\n\n        <CustomTabs\n          icon={<Favorite />}\n          aria-label=\"Liked\"\n          component={Link}\n          to=\"/liked\"\n          label=\"Liked\"\n        />\n\n        <CustomTabs\n          icon={<GetApp />}\n          aria-label=\"Downloads\"\n          component={Link}\n          to=\"/downloads\"\n          label=\"Downloads\"\n        />\n        <CustomTabs\n          icon={<History />}\n          aria-label=\"History\"\n          component={Link}\n          to=\"/history\"\n          label=\"History\"\n        />\n      </CustomTab>\n    </div>\n  );\n};\n\nexport default withRouter(CurrentSection);\n",["133","134"],"E:\\S-Tech\\Web Development\\moodify\\src\\components\\LoginPage.js",[],"E:\\S-Tech\\Web Development\\moodify\\src\\components\\player\\SleepTimer.js",["135","136","137","138"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport {\n  Dialog,\n  Switch,\n  DialogActions,\n  Button,\n  FormControlLabel,\n  FormControl,\n  DialogTitle,\n  Typography\n} from \"@material-ui/core\";\nimport { TimerOff, Timer } from \"@material-ui/icons\";\nimport { CircleSlider } from \"react-circle-slider\";\n\nimport \"./SleepTimerStyle.css\";\n\nconst setSleepTimeToLocalStorage = (time, alwaysOn) => {\n  const sleepTimerSettings = JSON.stringify({ time: time, alwaysOn: alwaysOn });\n\n  localStorage.setItem(\"sleepTimerSettings\", sleepTimerSettings);\n};\n\nconst getSleepTimeFromLocalStoarge = () => {\n  const sleepTimerSettings = localStorage.getItem(\"sleepTimerSettings\");\n  return JSON.parse(sleepTimerSettings);\n};\n\nconst removeSleepTimer = () => {\n  localStorage.removeItem(\"sleepTimerSettings\");\n};\n\nlet timerTimeout;\n\nfunction SleepTimer({ player }) {\n  const [sliderValue, changeSliderValue] = useState(20);\n  const [open, setOpen] = useState(false);\n  const [checkbox, setCheckbox] = useState(false);\n  const [isTimerSet, setIsTimerSet] = useState(false);\n\n  const setTimer = time => {\n    console.log(\"timer has been set with time\", time);\n    clearTimeout(timerTimeout);\n    setIsTimerSet(true);\n    timerTimeout = setTimeout(() => {\n      player.pause(); //pause after music finished\n    }, time * 60 * 1000);\n  };\n\n  useEffect(() => {\n    const sleepTimerObj = getSleepTimeFromLocalStoarge();\n    if (sleepTimerObj) {\n      changeSliderValue(sleepTimerObj.time);\n      setCheckbox(sleepTimerObj.alwaysOn);\n    }\n\n    //only set timer when there is no timer\n    if (sleepTimerObj && sleepTimerObj.alwaysOn) {\n      console.log(sleepTimerObj);\n      setTimer(sleepTimerObj.time);\n    }\n    console.log(sleepTimerObj);\n  }, []);\n\n  const handleSetTimer = () => {\n    setSleepTimeToLocalStorage(sliderValue, checkbox);\n    //   then also set a set timeout\n    // if there is any timer already clear it\n    setOpen(false);\n    setTimer(sliderValue);\n  };\n\n  const handleRemove = () => {\n    removeSleepTimer();\n    setIsTimerSet(false);\n    setOpen(false);\n  };\n\n  return (\n    <>\n      {isTimerSet ? (\n        <Timer color=\"primary\" onClick={() => setOpen(true)} />\n      ) : (\n        <TimerOff color=\"primary\" onClick={() => setOpen(true)} />\n      )}\n      <Dialog\n        style={{ zIndex: 1400 }}\n        open={open}\n        onClose={() => setOpen(false)}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <Typography\n          variant=\"h5\"\n          color=\"primary\"\n          align=\"center\"\n          style={{ marginTop: \"10px\" }}\n        >\n          Pause Music After\n        </Typography>\n        <div className=\"container\">\n          <div className=\"textContainer\">\n            {sliderValue}\n            <div className=\"minute\">MINUTES</div>\n          </div>\n          <CircleSlider\n            value={sliderValue}\n            stepSize={5}\n            onChange={value => changeSliderValue(value)}\n            size={300}\n            max={120}\n            gradientColorFrom=\"#6A82FB\"\n            gradientColorTo=\"#FC5C7D\"\n            knobRadius={25}\n            progressWidth={30}\n            circleWidth={30}\n          />\n        </div>\n\n        <DialogActions>\n          <FormControlLabel\n            value=\"Always On\"\n            control={\n              <Switch\n                checked={checkbox}\n                onChange={e => setCheckbox(e.target.checked)}\n                value=\"checked always on\"\n                color=\"primary\"\n              />\n            }\n            label=\"ALWAYS\"\n            labelPlacement=\"end\"\n            style={{ color: \"#e91e63\" }}\n          />\n          <Button color=\"primary\" onClick={handleRemove}>\n            Remove\n          </Button>\n\n          <Button color=\"primary\" onClick={handleSetTimer}>\n            Set\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nexport default SleepTimer;\n","E:\\S-Tech\\Web Development\\moodify\\src\\components\\player\\MusicArt.js",[],["139","140"],"E:\\S-Tech\\Web Development\\moodify\\src\\reportWebVitals.js",[],["141","142"],"E:\\S-Tech\\Web Development\\moodify\\src\\components\\sections\\SettingsPage.js",[],["143","144"],"E:\\S-Tech\\Web Development\\moodify\\src\\components\\header\\AutoSearchResult.js",[],["145","146"],"E:\\S-Tech\\Web Development\\moodify\\src\\components\\player\\TimelineController.js",["147","148"],"E:\\S-Tech\\Web Development\\moodify\\src\\components\\AppContainer.js",["149","150"],"import React, { useEffect, useContext } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport SimpleAppBar from \"./header/SimpleAppBar\";\nimport SwipeMenu from \"./SwipeMenu\";\nimport CurrentSection from \"./CurrentSection\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport { indigo } from \"@material-ui/core/colors\";\n\nimport { useCheckDarkmode } from \"./sections/SettingsPage\";\nimport { GlobalContext } from \"./GlobalState\";\n\nconst body = document.querySelector(\"body\");\n\nconst defaultTheme = {\n  palette: {\n    primary: indigo,\n    secondary: {\n      main: \"#000000\"\n    }\n  },\n  typography: {\n    useNextVariants: true\n  }\n};\n\nconst darkTheme = {\n  palette: {\n    type: \"dark\",\n    primary: indigo,\n    secondary: {\n      main: \"#ffffff\"\n    }\n  },\n  typography: {\n    useNextVariants: true\n  }\n};\n\nconst muiDarkTheme = createMuiTheme(darkTheme);\nconst muiDefaultTheme = createMuiTheme(defaultTheme);\n\nconst AppContainer = () => {\n  const [{ themeSelectValue }, dispatch] = useContext(GlobalContext);\n\n  const { checkDarkMode } = useCheckDarkmode();\n\n  useEffect(() => {\n    checkDarkMode();\n\n    if (navigator.userAgent.match(/Android/i)) {\n      body.style.overscrollBehavior = \"none\";\n      // this is to disable pull refresh on android\n    }\n  }, []);\n\n  useEffect(() => {\n    if (themeSelectValue === \"Dark\") {\n      body.classList.add(\"dark\");\n    } else {\n      body.classList.remove(\"dark\");\n    }\n  }, [themeSelectValue]);\n\n  return (\n    <MuiThemeProvider\n      theme={themeSelectValue === \"Dark\" ? muiDarkTheme : muiDefaultTheme}\n    >\n      <Router>\n        <SimpleAppBar />\n        <Route component={CurrentSection} />\n\n        <SwipeMenu />\n      </Router>\n       \n    </MuiThemeProvider>\n  );\n};\nexport default AppContainer;\n",["151","152"],"E:\\S-Tech\\Web Development\\moodify\\src\\components\\RenderDatabase.js",["153","154","155","156","157","158"],"import React, { useContext, useState, useEffect } from \"react\";\n// import {\n//   List,\n//   AutoSizer,\n//   CellMeasurer,\n//   CellMeasurerCache\n// } from \"react-virtualized\";\n\nimport { DynamicSizeList as List } from \"react-window-dynamic\";\n\n\nimport CompletedTick from \"../images/CompletedTick.svg\";\nimport DownloadIcon from \"../images/DownloadIcon.svg\";\n\nimport {\n  ListItem,\n  Typography,\n  ListItemAvatar,\n  Avatar,\n  Divider,\n  ListItemText\n} from \"@material-ui/core\";\n\nimport DownloadDeleteDialog from \"./DownloadDeleteDialog\";\n\nimport { GlobalContext } from \"./GlobalState\";\n\nimport getAudioLink from \"../apis/getAudioLink\";\nimport { downloadSong, deleteSongAudio } from \"../external/saveSong\";\n\n// const cache = new CellMeasurerCache({\n//   minHeight: 50,\n//   defaultHeight: 60,\n//   fixedWidth: true\n//   // keyMapper: () => 1\n// });\n\nlet currentId;\n\nexport const useSongMethods = songId => {\n  const [{}, dispatch] = useContext(GlobalContext);\n\n  const setSnackbarMsg = React.useCallback(\n    data => {\n      dispatch({ type: \"setSnackbarMsg\", snippet: data });\n    },\n    [dispatch]\n  );\n\n  const [deleteDialogState, setDeleteDialogState] = useState(false);\n  const [dontAskPopup, setDontAskPopup] = useState(null);\n\n  useEffect(() => {\n    //convert string to bool\n    const popupLocalState = localStorage.getItem(\"dontAskPopup\") === \"true\";\n    setDontAskPopup(popupLocalState);\n    // for popup settings\n  }, []);\n\n  const handleDownload = async songId => {\n    // console.log(\"here is the id\", songId);\n    const res = await getAudioLink.get(\"/song\", {\n      params: { id: songId }\n    });\n    // first we will fetch the song link then we will download it\n    // the download song function takes id and the url\n    const status = await downloadSong(songId, res.data);\n    // after the downloading is done we will remove the downloading class\n    // set the snackbar message\n    setSnackbarMsg(\"Song Downloaded\");\n    console.log(\"song status\", status);\n  };\n\n  const disablePopup = () => {\n    localStorage.setItem(\"dontAskPopup\", true);\n    setDontAskPopup(true);\n  };\n\n  const deleteTheSong = async checkBox => {\n    const deleted = await deleteSongAudio(currentId);\n    setDeleteDialogState(false);\n    setSnackbarMsg(\"Deleted Successfully\");\n\n    console.log(currentId, checkBox);\n    // we will set it to localstorage the popup option\n    if (checkBox) {\n      disablePopup();\n    }\n  };\n\n  // hadnling download dialog\n  const handleRemoveSong = songId => {\n    console.log(\"handle remove dude\");\n    currentId = songId;\n    // when user clicks on the download badge we will check the state\n    // then delete the song without showing the popup if dontAskPopup is true\n    // and delete the song by calling deleteTheSong\n    dontAskPopup ? deleteTheSong() : setDeleteDialogState(true);\n  };\n\n  const deleteDialogComponent = dontAskPopup ? null : (\n    <DownloadDeleteDialog\n      isOpen={deleteDialogState}\n      handleCancel={() => setDeleteDialogState(false)} // we will just hide the dialog on cancel\n      handleDelete={deleteTheSong} //if user wants to delete the song we will just do it\n    />\n  );\n\n  return {\n    handleDownload,\n    handleRemoveSong,\n    deleteTheSong,\n    dontAskPopup,\n    setDeleteDialogState,\n    deleteDialogState,\n    deleteDialogComponent\n  };\n};\n\nconst RenderDatabase = props => {\n  const songs = props.songs;\n  const [{}, dispatch] = useContext(GlobalContext);\n  const setCurrentVideoSnippet = data => {\n    dispatch({ type: \"setCurrentVideoSnippet\", snippet: data });\n  };\n  const setSnackbarMsg = data => {\n    dispatch({ type: \"setSnakbarMsg\", snippet: data });\n  };\n\n  const [windowHeight, setWindowHeight] = useState(window.innerHeight);\n\n  const handleClick = song => {\n    // set all the info of current clicked video in this object\n    setCurrentVideoSnippet({\n      id: song.videoId,\n      audio: song.audio,\n      thumbnail: song.thumbnail,\n      title: song.title,\n      channelTitle: song.channelTitle,\n      maxThumbnail: `https://img.youtube.com/vi/${song.videoId}/maxresdefault.jpg`,\n      sdThumbnail: `https://img.youtube.com/vi/${song.videoId}/sddefault.jpg`\n      // this is the url of the max resolution of thumbnail\n    });\n  };\n\n  const {\n    handleDownload,\n    handleRemoveSong,\n    deleteDialogComponent\n  } = useSongMethods();\n\n  const returnAnimatedClass = song => {\n    if (song.downloadState === \"downloading\") {\n      console.log(song.downloadState);\n      return \"downloading-animation\";\n    } else {\n      return \"\";\n    }\n  };\n\n\n\n\n  useEffect(() => {\n    setWindowHeight(window.innerHeight);\n  });\n\n  const renderResult = songs.map((song, index) => {\n    return (\n      <>\n        <ListItem\n          alignItems=\"flex-start\"\n          button\n          onClick={() => handleClick(song)}\n          // component={Link}\n          // to={{ pathname: \"/play\", search: `?id=${song.videoId}`, state: { modal: true } }}\n        >\n          <ListItemAvatar>\n            <Avatar\n              className=\"searchThumb\"\n              style={{ width: \"60px\", height: \"60px\", marginRight: \"15px\" }}\n              alt={song.title}\n              src={`https://img.youtube.com/vi/${song.videoId}/default.jpg`}\n            />\n          </ListItemAvatar>\n          {/* we will play the song when clicked on title */}\n          <ListItemText\n            primary={song.title}\n            secondary={\n              <React.Fragment>\n                <Typography\n                  component=\"span\"\n                  variant=\"body2\"\n                  color=\"textPrimary\"\n                >\n                  {song.channelTitle}\n                </Typography>\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n        <div\n          className=\"download-container\"\n          onClick={() =>\n            song.audio\n              ? handleRemoveSong(song.videoId)\n              : handleDownload(song.videoId)\n          }\n        >\n          <div className=\"badge-container\">\n            {/* if there is audio file then we will show tick mark icon */}\n            <img\n              className={returnAnimatedClass(song)}\n              src={song.audio ? CompletedTick : DownloadIcon}\n              alt=\"downloading icon\"\n            />\n          </div>\n        </div>\n      </>\n    );\n  });\n\n  const renderItem = React.forwardRef((row, ref) => (\n    <div\n      ref={ref}\n      style={{\n        ...row.style,\n        maxWidth: \"1000px\",\n        left: \"50%\",\n        transform: \"translateX(-50%)\"\n      }}\n    >\n      {renderResult[row.index]}\n      <Divider />\n    </div>\n  ));\n  return (\n    <>\n      {deleteDialogComponent}\n\n      <List\n        height={window.innerHeight - 100}\n        itemCount={songs.length}\n        width={window.innerWidth}\n      >\n        {renderItem}\n      </List>\n    </>\n  );\n};\n\nexport default RenderDatabase;\n","E:\\S-Tech\\Web Development\\moodify\\src\\components\\player\\NextButton.js",[],["159","160"],"E:\\S-Tech\\Web Development\\moodify\\src\\components\\player\\VolumeController.js",["161"],"import React, { useState } from \"react\";\nimport { IconButton, Grid, Slider } from \"@material-ui/core/\";\nimport { VolumeUp } from \"@material-ui/icons/\";\n\nconst VolumeController = ({ player, setPlayerState }) => {\n  const [volume, setVolume] = useState(100);\n\n  const volumeChange = (e, newVal) => {\n    setVolume(newVal);\n    player.volume = newVal / 100;\n    //\n  };\n\n\n  return (\n\n      <Grid container spacing={1} style={{ maxWidth: \"200px\" }}>\n        <Grid item>\n          <VolumeUp color=\"primary\" />\n        </Grid>\n        <Grid item xs={3}>\n          <Slider value={volume} onChange={volumeChange} />\n        </Grid>\n      </Grid>\n  );\n};\n\nexport default VolumeController;\n","E:\\S-Tech\\Web Development\\moodify\\src\\components\\GlobalState.js",[],"E:\\S-Tech\\Web Development\\moodify\\src\\apis\\getAudioLink.js",[],"E:\\S-Tech\\Web Development\\moodify\\src\\external\\saveCountry.js",[],"E:\\S-Tech\\Web Development\\moodify\\src\\components\\player\\PlayPauseButton.js",["162"],"E:\\S-Tech\\Web Development\\moodify\\src\\components\\App.js",[],"E:\\S-Tech\\Web Development\\moodify\\src\\components\\header\\SearchBox.js",["163"],"import React, { useContext, useState, useEffect, useCallback } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport {\n  InputBase,\n  IconButton,\n  Popper,\n  CircularProgress,\n  Grid\n} from \"@material-ui/core\";\nimport { ArrowBack } from \"@material-ui/icons\";\n\nimport { GlobalContext } from \"../GlobalState\";\nimport suggestSearch from \"../../apis/suggestSearch\";\nimport AutoSearchResult from \"./AutoSearchResult\";\nimport youtubeSearch from \"../../apis/youtubeSearch\";\n\nconst SearchBox = ({ history, location }) => {\n  let params = new URLSearchParams(location.search);\n\n  const [{ searchState }, dispatch] = useContext(GlobalContext);\n\n  const setSearchState = useCallback(\n    data => {\n      dispatch({ type: \"setSearchState\", snippet: data });\n    },\n    [dispatch]\n  );\n\n  const setSearchResult = useCallback(\n    data => {\n      console.log(data);\n      dispatch({ type: \"setSearchResult\", snippet: data });\n    },\n    [dispatch]\n  );\n\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [autoSearchData, setAutoSearch] = useState(\"\");\n\n  const [ytSearchQuery, setYtSearchQuery] = useState(null);\n\n  // toggle popper\n  const [isPopperOpen, setPopper] = useState(true);\n\n  console.log(\"search box re rendered\");\n\n  // get back the selected search data\n  const onSearchSelect = result => {\n    setSearchQuery(result);\n    setYtSearchQuery(result);\n    setSearchState(\"searching\");\n    history.push({ pathname: \"/search\", search: `?q=${result}` });\n  };\n\n  // when user hits enter then also fetch the data from yt api\n  const onSearchSubmit = e => {\n    e.preventDefault();\n    console.log(e.target.lastChild);\n    e.target.lastChild.lastChild.blur();\n    setSearchState(\"searching\");\n    setYtSearchQuery(searchQuery);\n    history.push({ pathname: \"/search\", search: `?q=${searchQuery}` });\n  };\n\n  // for controlled input change\n  const onChange = e => {\n    setSearchQuery(e.target.value);\n    getAutocomplete();\n  };\n\n  // get autocomplete data form api\n  const getAutocomplete = async () => {\n    const response = await suggestSearch.get(\"\", {\n      params: {\n        q: searchQuery\n      }\n    });\n    setAutoSearch(response.data[1]);\n  };\n\n  // get youtube search result from api\n  useEffect(() => {\n    const searchYt = async data => {\n      const res = await youtubeSearch.get(\"/search\", {\n        params: {\n          q: data,\n          maxResults: 15\n        }\n      });\n      setSearchResult(res.data.items);\n      setSearchState(\"completed\");\n    };\n    // only search if there is any value\n    if (ytSearchQuery && ytSearchQuery !== \"\") {\n      searchYt(ytSearchQuery);\n    }\n    // console.log(ytSearchQuery);\n  }, [ytSearchQuery, setSearchResult, setSearchState]);\n\n  useEffect(() => {\n    console.log(\"search state\", searchState);\n  }, [searchState]);\n\n  useEffect(() => {\n    // Listen for changes to the current location.\n    const query = params.get(\"q\");\n    if (query) {\n      setYtSearchQuery(query);\n      setSearchQuery(query);\n      setSearchState(\"searching\");\n      console.log(\"changing query to\", query);\n    }\n\n    // const unlisten = history.listen(location => {\n    //   // setYtSearchQuery(params.get(\"q\"));\n    //   // we will se the q from params\n    //   // location is an object like window.location\n    //   const path = location.pathname;\n    //   // if (path.slice(1, 7) === \"search\" || path.slice(1, 5) === \"song\") {\n    //   //   setSearchState(\"searched\");\n    //   // } else {\n    //   //   setSearchState(\"home\");\n    //   // }\n    // });\n  }, [setSearchState, setYtSearchQuery]);\n\n  // show loading icon while we fetch the results from api\n\n  const popperResult = () => {\n    switch (searchState) {\n      case \"searching\":\n        return (\n          <Grid\n            style={{ height: \"100vh\" }}\n            container\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <CircularProgress />\n          </Grid>\n        );\n      case \"clicked\":\n        return (\n          <AutoSearchResult\n            results={autoSearchData}\n            onSearchSelect={onSearchSelect}\n          />\n        );\n      case \"completed\":\n        setPopper(false);\n        break;\n      default:\n        break;\n    }\n    console.log(\"Function ran\");\n  };\n\n  return (\n    <>\n      <IconButton\n        onClick={() => {\n          setSearchState(\"home\");\n          if (history.location.pathname === \"/search\") {\n            history.goBack();\n          }\n          // only go back if u have searched something\n        }}\n        color=\"inherit\"\n        aria-label=\"Menu\"\n      >\n        <ArrowBack />\n      </IconButton>\n      <form style={{ width: \"100%\" }} onSubmit={e => onSearchSubmit(e)}>\n        <InputBase\n          fullWidth\n          placeholder=\"Search...\"\n          autoFocus\n          style={{ color: \"#fff\", paddingLeft: \"16px\" }}\n          value={searchQuery}\n          onChange={onChange}\n          // on click we will show popper\n          onClick={() => {\n            setSearchState(\"clicked\");\n            setPopper(true);\n          }}\n        />\n      </form>\n\n      <Popper\n        className=\"searchPopper\"\n        open={isPopperOpen}\n        anchorEl={document.getElementById(\"navbar\")}\n        popperOptions={{\n          modifiers: {\n            preventOverflow: {\n              padding: 0\n            }\n          }\n        }}\n        placement=\"bottom\"\n      >\n        {popperResult}\n      </Popper>\n    </>\n  );\n};\n\nexport default withRouter(SearchBox);\n","E:\\S-Tech\\Web Development\\moodify\\src\\apis\\youtubeSearch.js",[],"E:\\S-Tech\\Web Development\\moodify\\src\\components\\RelatedVideos.js",["164","165","166","167"],"import React, { useContext, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\n\nimport {\n  List,\n  ListItem,\n  Typography,\n  ListItemIcon,\n  ListItemText,\n  Grid,\n  Divider,\n  LinearProgress\n} from \"@material-ui/core\";\n\nimport {\n  MusicVideo,\n  LibraryMusic,\n  Shuffle,\n  Repeat,\n  KeyboardArrowUp,\n  KeyboardArrowDown,\n  RepeatOne\n} from \"@material-ui/icons\";\n\nimport { GlobalContext } from \"./GlobalState\";\n\nlet renderResult;\n\n// written by @bushblade\nconst shuffle = arry =>\n  arry.reduce(\n    (acc, _, i) => {\n      const rnd = Math.floor(Math.random() * acc.length),\n        temp = acc[i];\n      acc[i] = acc[rnd];\n      acc[rnd] = temp;\n      return acc;\n    },\n    [...arry]\n  );\n\nconst RelatedVideos = ({\n  toggleMaxPlaylist,\n  setPlaylist,\n  playerState,\n  relatedVideos,\n  setRelatedVideos,\n  setIsRepeatOn,\n  isRepeatOn\n}) => {\n  const [{}, dispatch] = useContext(GlobalContext);\n  const setCurrentVideoSnippet = data => {\n    dispatch({ type: \"setCurrentVideoSnippet\", snippet: data });\n  };\n  const handleShuffleClick = () => {\n    setRelatedVideos(shuffle(relatedVideos));\n  };\n\n  const spring = {\n    type: \"spring\",\n    damping: 20,\n    stiffness: 300\n  };\n  const handleClick = video => {\n    // set all the info of current clicked video in this object\n    setCurrentVideoSnippet({\n      id: video.id.videoId,\n      title: video.snippet.title,\n      channelTitle: video.snippet.channelTitle,\n      maxThumbnail: `https://img.youtube.com/vi/${video.id.videoId}/maxresdefault.jpg`,\n      sdThumbnail: `https://img.youtube.com/vi/${video.id.videoId}/sddefault.jpg`\n      // this is the url of the max resolution of thumbnail\n    });\n    setPlaylist();\n  };\n\n  if (relatedVideos.length > 1) {\n    renderResult = relatedVideos.map(song => {\n      return (\n        <motion.li key={song.id.videoId} positionTransition={spring}>\n          <ListItem\n            // key={song.id.videoId}\n            button\n            onClick={() => handleClick(song)}\n            // component={Link}\n            // replace\n            // to={{ pathname: \"/play\", search: `?id=${song.id.videoId}` }}\n          >\n            <ListItemIcon>\n              <MusicVideo style={{ color: \"#fff\" }} />\n            </ListItemIcon>\n            <ListItemText\n              primary={song.snippet.title.slice(0, 40)}\n              secondary={song.snippet.channelTitle.slice(0, 40)}\n            />\n          </ListItem>\n        </motion.li>\n      );\n    });\n  } else {\n    return <LinearProgress />;\n  }\n\n  const returnPlaylistExpandBtn = () => {\n    if (playerState === \"playlist\") {\n      return <KeyboardArrowDown onClick={toggleMaxPlaylist} />;\n    } else {\n      return <KeyboardArrowUp onClick={toggleMaxPlaylist} />;\n    }\n  };\n\n  return (\n    <div className=\"RelatedVideoContainer\">\n      <Grid\n        className={\"playlistHeader\"}\n        container\n        direction=\"row\"\n        alignItems=\"center\"\n        justify=\"space-between\"\n      >\n        <LibraryMusic />\n        <Typography variant=\"h6\">Coming Next</Typography>\n        <Shuffle onClick={handleShuffleClick} />\n        {/* this will show the repeat button and repeat the song */}\n        {isRepeatOn ? (\n          <RepeatOne onClick={setIsRepeatOn} />\n        ) : (\n          <Repeat onClick={setIsRepeatOn} />\n        )}\n        {returnPlaylistExpandBtn()}\n      </Grid>\n      <List dense={true}>{renderResult}</List>\n    </div>\n  );\n};\n\nexport default RelatedVideos;\n","E:\\S-Tech\\Web Development\\moodify\\src\\components\\SearchResult.js",["168","169","170","171"],"import React, { useContext } from \"react\";\nimport { motion, useCycle } from \"framer-motion\";\nimport { Link } from \"react-router-dom\";\n\nimport { GlobalContext } from \"./GlobalState\";\n\nimport youtubeSearch from \"../apis/youtubeSearch\";\nimport \"../style.css\";\nimport {\n  ListItem,\n  Typography,\n  ListItemAvatar,\n  Avatar,\n  Divider,\n  ListItemText\n} from \"@material-ui/core\";\n\nconst Entities = require(\"html-entities\").XmlEntities;\n\nconst entities = new Entities();\n\nconst liVariants = {\n  open: {\n    y: 0,\n    opacity: 1,\n    transition: {\n      y: { stiffness: 1000, velocity: -100 }\n    }\n  },\n  closed: {\n    y: 50,\n    opacity: 0,\n    transition: {\n      y: { stiffness: 1000 }\n    }\n  }\n};\n\nconst ulVariants = {\n  open: {\n    transition: { staggerChildren: 0.07, delayChildren: 0.2 }\n  },\n  closed: {\n    transition: { staggerChildren: 0.05, staggerDirection: -1 }\n  }\n};\n\nconst SearchResult = ({ videos }) => {\n  const [isOpen, setisOpen] = useCycle(false, true);\n\n  const [{}, dispatch] = useContext(GlobalContext);\n  const setCurrentVideoSnippet = data => {\n    dispatch({ type: \"setCurrentVideoSnippet\", snippet: data });\n  };\n\n  const handleClick = video => {\n    // set all the info of current clicked video in this object\n    setCurrentVideoSnippet({\n      id: video.id.videoId,\n      title: entities.decode(video.snippet.title),\n      channelTitle: entities.decode(video.snippet.channelTitle),\n      maxThumbnail: `https://img.youtube.com/vi/${video.id.videoId}/maxresdefault.jpg`,\n      sdThumbnail: `https://img.youtube.com/vi/${video.id.videoId}/sddefault.jpg`\n      // this is the url of the max resolution of thumbnail\n    });\n  };\n\n  React.useEffect(() => {\n    setTimeout(() => {}, 100);\n    console.log(\"isopen cycle\", isOpen);\n    setisOpen(true);\n  }, []);\n\n  const renderResult = videos.map(video => {\n    const { snippet } = video;\n    console.log(\"render result times\");\n    return (\n      <motion.div variants={liVariants} key={video.id.videoId}>\n        <ListItem\n          alignItems=\"flex-start\"\n          button\n          onClick={() => handleClick(video)}\n          // component={Link}\n          // to={{pathname: \"/play\", search:`?id=${video.id.videoId}`}}\n        >\n          <ListItemAvatar>\n            <Avatar\n              className=\"searchThumb\"\n              style={{ width: \"60px\", height: \"60px\", marginRight: \"15px\" }}\n              alt={snippet.title}\n              src={snippet.thumbnails.high.url}\n            />\n          </ListItemAvatar>\n          <ListItemText\n            primary={entities.decode(snippet.title)}\n            secondary={\n              <>\n                <Typography\n                  component=\"span\"\n                  variant=\"body2\"\n                  color=\"textPrimary\"\n                >\n                  {snippet.channelTitle}\n                </Typography>\n              </>\n            }\n          />\n        </ListItem>\n        <Divider />\n      </motion.div>\n    );\n  });\n\n  return (\n    <motion.div\n      variants={ulVariants}\n      initial={false}\n      animate={isOpen ? \"open\" : \"closed\"}\n    >\n      {renderResult}\n    </motion.div>\n  );\n};\n\nexport default SearchResult;\n",["172","173"],"E:\\S-Tech\\Web Development\\moodify\\src\\components\\sections\\SongCard.js",["174"],"E:\\S-Tech\\Web Development\\moodify\\src\\components\\player\\MiniMusicArt.js",["175"],"E:\\S-Tech\\Web Development\\moodify\\src\\components\\SwipeMenu.js",[],"E:\\S-Tech\\Web Development\\moodify\\src\\components\\header\\SimpleAppBar.js",["176"],"E:\\S-Tech\\Web Development\\moodify\\src\\external\\saveSong.js",[],"E:\\S-Tech\\Web Development\\moodify\\src\\serviceWorkerRegistration.js",[],"E:\\S-Tech\\Web Development\\moodify\\src\\components\\player\\TopBar.js",["177","178","179","180","181","182","183"],{"ruleId":"184","severity":1,"message":"185","line":11,"column":20,"nodeType":"186","messageId":"187","endLine":11,"endColumn":26},{"ruleId":"184","severity":1,"message":"188","line":18,"column":10,"nodeType":"186","messageId":"187","endLine":18,"endColumn":25},{"ruleId":"189","severity":1,"message":"190","line":176,"column":6,"nodeType":"191","endLine":176,"endColumn":8,"suggestions":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","replacedBy":"196"},{"ruleId":"184","severity":1,"message":"197","line":1,"column":38,"nodeType":"186","messageId":"187","endLine":1,"endColumn":49},{"ruleId":"184","severity":1,"message":"198","line":8,"column":3,"nodeType":"186","messageId":"187","endLine":8,"endColumn":14},{"ruleId":"184","severity":1,"message":"199","line":9,"column":3,"nodeType":"186","messageId":"187","endLine":9,"endColumn":14},{"ruleId":"189","severity":1,"message":"200","line":62,"column":6,"nodeType":"191","endLine":62,"endColumn":8,"suggestions":"201"},{"ruleId":"193","replacedBy":"202"},{"ruleId":"195","replacedBy":"203"},{"ruleId":"193","replacedBy":"204"},{"ruleId":"195","replacedBy":"205"},{"ruleId":"193","replacedBy":"206"},{"ruleId":"195","replacedBy":"207"},{"ruleId":"193","replacedBy":"208"},{"ruleId":"195","replacedBy":"209"},{"ruleId":"184","severity":1,"message":"210","line":64,"column":10,"nodeType":"186","messageId":"187","endLine":64,"endColumn":15},{"ruleId":"184","severity":1,"message":"211","line":64,"column":17,"nodeType":"186","messageId":"187","endLine":64,"endColumn":25},{"ruleId":"184","severity":1,"message":"212","line":44,"column":32,"nodeType":"186","messageId":"187","endLine":44,"endColumn":40},{"ruleId":"189","severity":1,"message":"213","line":55,"column":6,"nodeType":"191","endLine":55,"endColumn":8,"suggestions":"214"},{"ruleId":"193","replacedBy":"215"},{"ruleId":"195","replacedBy":"216"},{"ruleId":"217","severity":1,"message":"218","line":41,"column":10,"nodeType":"219","messageId":"220","endLine":41,"endColumn":12},{"ruleId":"184","severity":1,"message":"221","line":80,"column":11,"nodeType":"186","messageId":"187","endLine":80,"endColumn":18},{"ruleId":"217","severity":1,"message":"218","line":122,"column":10,"nodeType":"219","messageId":"220","endLine":122,"endColumn":12},{"ruleId":"184","severity":1,"message":"222","line":126,"column":9,"nodeType":"186","messageId":"187","endLine":126,"endColumn":23},{"ruleId":"184","severity":1,"message":"223","line":130,"column":10,"nodeType":"186","messageId":"187","endLine":130,"endColumn":22},{"ruleId":"189","severity":1,"message":"224","line":164,"column":3,"nodeType":"186","endLine":164,"endColumn":12,"suggestions":"225"},{"ruleId":"193","replacedBy":"226"},{"ruleId":"195","replacedBy":"227"},{"ruleId":"184","severity":1,"message":"228","line":2,"column":10,"nodeType":"186","messageId":"187","endLine":2,"endColumn":20},{"ruleId":"184","severity":1,"message":"229","line":1,"column":17,"nodeType":"186","messageId":"187","endLine":1,"endColumn":25},{"ruleId":"189","severity":1,"message":"230","line":126,"column":6,"nodeType":"191","endLine":126,"endColumn":40,"suggestions":"231"},{"ruleId":"184","severity":1,"message":"232","line":1,"column":29,"nodeType":"186","messageId":"187","endLine":1,"endColumn":38},{"ruleId":"184","severity":1,"message":"233","line":2,"column":10,"nodeType":"186","messageId":"187","endLine":2,"endColumn":14},{"ruleId":"184","severity":1,"message":"234","line":12,"column":3,"nodeType":"186","messageId":"187","endLine":12,"endColumn":10},{"ruleId":"217","severity":1,"message":"218","line":52,"column":10,"nodeType":"219","messageId":"220","endLine":52,"endColumn":12},{"ruleId":"184","severity":1,"message":"233","line":3,"column":10,"nodeType":"186","messageId":"187","endLine":3,"endColumn":14},{"ruleId":"184","severity":1,"message":"235","line":7,"column":8,"nodeType":"186","messageId":"187","endLine":7,"endColumn":21},{"ruleId":"217","severity":1,"message":"218","line":51,"column":10,"nodeType":"219","messageId":"220","endLine":51,"endColumn":12},{"ruleId":"189","severity":1,"message":"236","line":72,"column":6,"nodeType":"191","endLine":72,"endColumn":8,"suggestions":"237"},{"ruleId":"193","replacedBy":"238"},{"ruleId":"195","replacedBy":"239"},{"ruleId":"217","severity":1,"message":"218","line":28,"column":10,"nodeType":"219","messageId":"220","endLine":28,"endColumn":12},{"ruleId":"184","severity":1,"message":"240","line":7,"column":7,"nodeType":"186","messageId":"187","endLine":7,"endColumn":13},{"ruleId":"184","severity":1,"message":"241","line":56,"column":11,"nodeType":"186","messageId":"187","endLine":56,"endColumn":19},{"ruleId":"184","severity":1,"message":"228","line":3,"column":3,"nodeType":"186","messageId":"187","endLine":3,"endColumn":13},{"ruleId":"184","severity":1,"message":"242","line":5,"column":3,"nodeType":"186","messageId":"187","endLine":5,"endColumn":9},{"ruleId":"184","severity":1,"message":"243","line":7,"column":3,"nodeType":"186","messageId":"187","endLine":7,"endColumn":13},{"ruleId":"184","severity":1,"message":"244","line":14,"column":3,"nodeType":"186","messageId":"187","endLine":14,"endColumn":8},{"ruleId":"184","severity":1,"message":"245","line":16,"column":3,"nodeType":"186","messageId":"187","endLine":16,"endColumn":7},{"ruleId":"184","severity":1,"message":"246","line":17,"column":3,"nodeType":"186","messageId":"187","endLine":17,"endColumn":11},{"ruleId":"189","severity":1,"message":"247","line":49,"column":6,"nodeType":"191","endLine":49,"endColumn":19,"suggestions":"248"},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'AnimatePresence' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'location'. Either include them or remove the dependency array.","ArrayExpression",["249"],"no-native-reassign",["250"],"no-negated-in-lhs",["251"],"'useCallback' is defined but never used.","'FormControl' is defined but never used.","'DialogTitle' is defined but never used.","React Hook useEffect has a missing dependency: 'setTimer'. Either include it or remove the dependency array.",["252"],["250"],["251"],["250"],["251"],["250"],["251"],["250"],["251"],"'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'checkDarkMode'. Either include it or remove the dependency array.",["253"],["250"],["251"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'deleted' is assigned a value but never used.","'setSnackbarMsg' is assigned a value but never used.","'windowHeight' is assigned a value but never used.","React Hook useEffect contains a call to 'setWindowHeight'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["254"],["250"],["251"],"'IconButton' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'params'. Either include it or remove the dependency array.",["255"],"'useEffect' is defined but never used.","'Link' is defined but never used.","'Divider' is defined but never used.","'youtubeSearch' is defined but never used.","React Hook React.useEffect has missing dependencies: 'isOpen' and 'setisOpen'. Either include them or remove the dependency array.",["256"],["250"],["251"],"'styles' is assigned a value but never used.","'unlisten' is assigned a value but never used.","'Slider' is defined but never used.","'makeStyles' is defined but never used.","'Reply' is defined but never used.","'Done' is defined but never used.","'AlarmOff' is defined but never used.","React Hook useEffect has a missing dependency: 'song.audio'. Either include it or remove the dependency array.",["257"],{"desc":"258","fix":"259"},"no-global-assign","no-unsafe-negation",{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},"Update the dependencies array to be: [history, location]",{"range":"272","text":"273"},"Update the dependencies array to be: [setTimer]",{"range":"274","text":"275"},"Update the dependencies array to be: [checkDarkMode]",{"range":"276","text":"277"},"Add dependencies array: []",{"range":"278","text":"279"},"Update the dependencies array to be: [params, setSearchState, setYtSearchQuery]",{"range":"280","text":"281"},"Update the dependencies array to be: [isOpen, setisOpen]",{"range":"282","text":"283"},"Update the dependencies array to be: [snackbarMsg, song.audio]",{"range":"284","text":"285"},[3707,3709],"[history, location]",[1738,1740],"[setTimer]",[1320,1322],"[checkDarkMode]",[4582,4582],", []",[3515,3549],"[params, setSearchState, setYtSearchQuery]",[1775,1777],"[isOpen, setisOpen]",[1144,1157],"[snackbarMsg, song.audio]"]