{"version":3,"sources":["../node_modules/@material-ui/core/esm/styles/makeStyles.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardActionArea/CardActionArea.js","../node_modules/@material-ui/core/esm/CardMedia/CardMedia.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","components/sections/SongCard.js","components/sections/HomePage.js"],"names":["makeStyles","stylesOrCreator","options","arguments","length","undefined","makeStylesWithoutDefault","_extends","defaultTheme","Card","React","props","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","clsx","root","elevation","withStyles","overflow","name","CardActionArea","children","focusVisibleClassName","ButtonBase","focusVisible","focusHighlight","theme","display","textAlign","width","opacity","palette","action","hoverOpacity","pointerEvents","position","top","right","bottom","left","borderRadius","backgroundColor","transition","transitions","create","duration","short","MEDIA_COMPONENTS","CardMedia","_props$component","component","Component","image","src","style","isMediaComponent","indexOf","composedStyle","backgroundImage","concat","media","img","backgroundSize","backgroundRepeat","backgroundPosition","objectFit","CardContent","padding","paddingBottom","useStyles","card","height","margin","whiteSpace","MediaCard","songs","categotyTitle","useContext","GlobalContext","dispatch","setCurrentVideoSnippet","data","type","snippet","console","log","renderCards","map","song","onClick","video","resourceId","id","videoId","title","channelTitle","maxThumbnail","sdThumbnail","thumbnails","high","url","loading","Typography","gutterBottom","variant","slice","marginLeft","Container","LinearProgress","color","playlistsIds","HomePage","useState","songObj","setSongObj","fetchFromApi","setTimeout","getTrendingMusic","a","youtubeSearch","get","params","chart","videoCategoryId","regionCode","localStorage","getItem","res","items","getPlayListItems","playlistId","then","prevState","trending","latestSongs","romanticSongs","topBolloywood","useEffect","startingTime","Date","storedTime","savedSongs","JSON","parse","window","navigator","onLine","alert","timeElapsedInHr","setItem","checkTimeAndFetch","stringify","SongCard"],"mappings":"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","file":"static/js/6.f4a63ab8.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      textAlign: 'inherit',\n      width: '100%',\n      '&:hover $focusHighlight': {\n        opacity: theme.palette.action.hoverOpacity\n      },\n      '&$focusVisible $focusHighlight': {\n        opacity: 0.12\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the action area is keyboard focused. */\n    focusVisible: {},\n\n    /* Styles applied to the overlay that covers the action area when it is keyboard focused. */\n    focusHighlight: {\n      overflow: 'hidden',\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      borderRadius: 'inherit',\n      opacity: 0,\n      backgroundColor: 'currentcolor',\n      transition: theme.transitions.create('opacity', {\n        duration: theme.transitions.duration.short\n      })\n    }\n  };\n};\nvar CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      focusVisibleClassName = props.focusVisibleClassName,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"focusVisibleClassName\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref\n  }, other), children, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.focusHighlight\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActionArea'\n})(CardActionArea);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('Material-UI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../GlobalState\";\n\nimport {\n  Card,\n  makeStyles,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  Typography,\n  LinearProgress,\n  Container\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  card: {\n    width: 300,\n    height: 260,\n    display: \"inline-block\",\n    margin: \"10px\",\n    whiteSpace: \"pre-wrap\"\n  },\n  media: {\n    height: 160\n  }\n});\nconst MediaCard = ({ songs, categotyTitle }) => {\n  const [{}, dispatch] = useContext(GlobalContext);\n  const setCurrentVideoSnippet = data => {\n    dispatch({ type: \"setCurrentVideoSnippet\", snippet: data });\n  };\n\n  const handleClick = video => {\n    // set all the info of current clicked video in this object\n\n    if (!video.snippet.resourceId) {\n      setCurrentVideoSnippet({\n        id: video.id,\n        title: video.snippet.title,\n        channelTitle: video.snippet.channelTitle,\n        maxThumbnail: `https://img.youtube.com/vi/${video.id}/maxresdefault.jpg`,\n        sdThumbnail: `https://img.youtube.com/vi/${video.id}/sddefault.jpg`\n        // this is the url of the max resolution of thumbnail\n      });\n    } else {\n      setCurrentVideoSnippet({\n        id: video.snippet.resourceId.videoId,\n        title: video.snippet.title,\n        channelTitle: video.snippet.channelTitle,\n        maxThumbnail: `https://img.youtube.com/vi/${video.snippet.resourceId.videoId}/maxresdefault.jpg`,\n        sdThumbnail: `https://img.youtube.com/vi/${video.snippet.resourceId.videoId}/sddefault.jpg`\n        // this is the url of the max resolution of thumbnail\n      });\n    }\n\n    console.log(video);\n  };\n\n  const classes = useStyles();\n\n  console.log(\"card re rendered\");\n\n  if (songs) {\n    const renderCards = songs.map(song => {\n      return (\n        <Card className={classes.card} key={song.id}>\n          <CardActionArea onClick={() => handleClick(song)}>\n            <CardMedia\n              className={classes.media}\n              component=\"img\"\n              src={song.snippet.thumbnails.high.url}\n              loading=\"lazy\"\n            />\n            <CardContent>\n              <Typography gutterBottom variant=\"body2\" component=\"p\">\n                {song.snippet.title.slice(0, 50) + \" ...\"}\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n        </Card>\n      );\n    });\n    return (\n      <>\n        <Typography variant=\"h5\" style={{ marginLeft: \"15px\" }}>\n          {categotyTitle}\n        </Typography>\n        <div className={\"cardSlider\"}>{renderCards}</div>\n      </>\n    );\n  } else {\n    return (\n      <Container style={{ height: \"25vh\" }}>\n        <LinearProgress color=\"secondary\" />\n      </Container>\n    );\n  }\n};\n\nexport default MediaCard;\n","import React, { useState, useEffect } from \"react\";\n\nimport SongCard from \"./SongCard\";\n\nimport youtubeSearch from \"../../apis/youtubeSearch\";\n\n// make a permanent playlist object with few songs catergory\nconst playlistsIds = {\n  LatestSongs: \"PLFgquLnL59akA2PflFpeQG9L01VFg90wS\",\n  RomanticSongs: \"PL64G6j8ePNureM8YCKy5nRFyzYf8I2noy\",\n  EdmSongs: \"PLw-VjHDlEOgs658kAHR_LAaILBXb-s6Q5\",\n  TopBolloywood: \"PLcRN7uK9CFpPkvCc-08tWOQo6PAg4u0lA\",\n  TopPop: \"PLDcnymzs18LU4Kexrs91TVdfnplU3I5zs\",\n  Reggaeton: \"PLS_oEMUyvA728OZPmF9WPKjsGtfC75LiN\"\n};\n\nlet slowConnectionTimeout;\nconst HomePage = () => {\n  // for home playlist\n  const [songObj, setSongObj] = useState({});\n\n  const fetchFromApi = () => {\n    slowConnectionTimeout = setTimeout(() => {}, 5000);\n\n    const getTrendingMusic = async () => {\n      const res = await youtubeSearch.get(\"videos\", {\n        params: {\n          chart: \"mostPopular\",\n          videoCategoryId: \"10\",\n          regionCode: localStorage.getItem(\"country_code\")\n        }\n      });\n\n      return res.data.items;\n    };\n\n    const getPlayListItems = async data => {\n      const res = await youtubeSearch.get(\"playlistItems\", {\n        params: {\n          playlistId: data\n        }\n      });\n      return res.data.items;\n    };\n\n    getTrendingMusic().then(data => {\n      setSongObj(prevState => {\n        return { ...prevState, ...{ trending: data } };\n      });\n    });\n\n    getPlayListItems(playlistsIds.LatestSongs).then(data => {\n      setSongObj(prevState => {\n        return { ...prevState, ...{ latestSongs: data } };\n      });\n    });\n\n    getPlayListItems(playlistsIds.RomanticSongs).then(data => {\n      setSongObj(prevState => {\n        return { ...prevState, ...{ romanticSongs: data } };\n      });\n    });\n\n    getPlayListItems(playlistsIds.TopBolloywood).then(data => {\n      setSongObj(prevState => {\n        return { ...prevState, ...{ topBolloywood: data } };\n      });\n    });\n  };\n\n  useEffect(() => {\n    const startingTime = new Date();\n    const storedTime = localStorage.getItem(\"trackTime\");\n    const savedSongs = JSON.parse(localStorage.getItem(\"homePageSongObj\"));\n\n    if (!window.navigator.onLine) {\n      alert(\"You don't have internet!\");\n    }\n\n    const checkTimeAndFetch = () => {\n      const timeElapsed = new Date() - Date.parse(storedTime); //parse the date\n\n      const timeElapsedInHr = timeElapsed / (1000 * 60 * 60); //convert ms into hr\n\n      // if time is more than 12 hr we will fetch from the api\n\n      console.log(\"Saved song\", savedSongs);\n      if (timeElapsedInHr > 12 || !savedSongs.latestSongs) {\n        fetchFromApi();\n        localStorage.setItem(\"trackTime\", startingTime); //dont forgot to update the time\n      } else {\n        setSongObj(savedSongs);\n      }\n    };\n\n    if (!storedTime) {\n      // if no time stored we will store it\n      localStorage.setItem(\"trackTime\", startingTime);\n      fetchFromApi();\n    } else {\n      checkTimeAndFetch();\n    }\n  }, []);\n\n  // if song object changes we will push it to localstoarge\n  useEffect(() => {\n    localStorage.setItem(\"homePageSongObj\", JSON.stringify(songObj));\n  }, [songObj]);\n\n  return (\n    <>\n      <br />\n      <SongCard songs={songObj.trending} categotyTitle={\"Trending Now\"} />\n\n      <SongCard songs={songObj.latestSongs} categotyTitle={\"Latest Music\"} />\n\n      <SongCard songs={songObj.romanticSongs} categotyTitle={\"Romantic Mood\"} />\n\n      <SongCard songs={songObj.topBolloywood} categotyTitle={\"Top Bollywood\"} />\n    </>\n  );\n};\n\nexport default HomePage;\n"],"sourceRoot":""}