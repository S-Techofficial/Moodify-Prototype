{"version":3,"sources":["components/RenderDatabase.js","images/CompletedTick.svg","images/DownloadIcon.svg","components/DownloadDeleteDialog.js","apis/suggestSearch.js","components/header/AutoSearchResult.js","components/header/SearchBox.js","components/header/SimpleAppBar.js","components/SwipeMenu.js","components/sections/SettingsPage.js","components/player/PlayPauseButton.js","components/player/NextButton.js","components/player/PreviousButton.js","images/dottedCircle.svg","components/player/MusicArt.js","components/player/SleepTimer.js","components/player/TimelineController.js","components/player/VolumeController.js","components/RelatedVideos.js","components/player/TopBar.js","components/player/MiniMusicArt.js","external/saveCountry.js","components/player/MainPlayer.js","components/CurrentSection.js","components/AppContainer.js","components/App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js","components/GlobalState.js","external/saveSong.js","apis/youtubeSearch.js","apis/getAudioLink.js"],"names":["currentId","DownloadDeleteDialog","isOpen","handleCancel","handleDelete","useState","checkBox","setCheckBox","React","useEffect","console","log","Dialog","style","zIndex","open","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","FormControlLabel","control","Checkbox","color","checked","onChange","e","target","value","label","DialogActions","Button","onClick","useSongMethods","songId","useContext","GlobalContext","dispatch","setSnackbarMsg","useCallback","data","type","snippet","deleteDialogState","setDeleteDialogState","dontAskPopup","setDontAskPopup","popupLocalState","localStorage","getItem","handleDownload","a","getAudioLink","get","params","res","downloadSong","status","deleteTheSong","deleteSongAudio","setItem","deleteDialogComponent","handleRemoveSong","RenderDatabase","props","songs","window","innerHeight","setWindowHeight","handleClick","song","videoId","audio","thumbnail","title","channelTitle","maxThumbnail","sdThumbnail","returnAnimatedClass","downloadState","renderResult","map","index","ListItem","alignItems","button","ListItemAvatar","Avatar","className","width","height","marginRight","alt","src","ListItemText","primary","secondary","Fragment","Typography","component","variant","CompletedTick","DownloadIcon","renderItem","forwardRef","row","ref","maxWidth","left","transform","Divider","itemCount","length","innerWidth","axios","create","baseURL","adapter","jsonpAdapter","hl","ds","client","AutoSearchResult","results","onSearchSelect","result","ListItemIcon","paddingLeft","Search","List","withRouter","history","location","URLSearchParams","search","searchState","setSearchState","setSearchResult","searchQuery","setSearchQuery","autoSearchData","setAutoSearch","ytSearchQuery","setYtSearchQuery","isPopperOpen","setPopper","push","pathname","getAutocomplete","suggestSearch","q","response","youtubeSearch","maxResults","items","searchYt","query","IconButton","goBack","aria-label","ArrowBack","onSubmit","preventDefault","lastChild","blur","onSearchSubmit","InputBase","fullWidth","placeholder","autoFocus","Popper","anchorEl","document","getElementById","popperOptions","modifiers","preventOverflow","padding","placement","Grid","container","justify","CircularProgress","HideOnScroll","children","trigger","useScrollTrigger","Slide","appear","direction","in","changeAppBar","path","listen","AppBar","position","Toolbar","justifyContent","fontFamily","margin","fontSize","SwipeMenu","menuOpen","themeSelectValue","setMenuOpen","setThemeSelectValue","isNight","setIsNight","changeTheme","theme","SwipeableDrawer","onOpen","display","FormGroup","Switch","Link","to","Settings","MaterialLink","href","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","SettingsPage","selectComp","Box","m","Select","displayEmpty","name","MenuItem","Container","align","gutterBottom","FormControl","labelPlacement","PlayPauseButton","player","audioState","minimized","size","pause","play","stopPropagation","disableFocusRipple","disableRipple","Pause","opacity","PauseCircleFilled","PlayArrow","PlayCircleFilled","onPlayNext","SkipNext","playPrevious","SkipPrevious","latestTouchTap","time","timerTimeout","MusicArt","rating","audioEl","swipeUpHandler","useSwipeable","onSwipedUp","dislikeSong","heartStyle","setHeartStyle","likeSong","setTimeout","rateSong","artContainerStyle","background","circleSvg","marginTop","event","touchTap","Date","getTime","currentTarget","isFastDblTouchTap","isDblTouchTap","div","drag","dragElastic","dragTransition","bounceStiffness","bounceDamping","dragConstraints","right","top","bottom","FavoriteTwoTone","boxShadow","URL","createObjectURL","imgProps","onLoad","naturalWidth","checkImg","re","RegExp","replace","shortTitle","PrettoSlider","withStyles","root","thumb","marginLeft","content","borderRadius","border","track","rail","Slider","MiniSlider","formatTime","secs","minutes","Math","floor","seconds","ceil","TimelineController","currentTime","setCurrentTime","setTimeInterval","setInterval","clearInterval","max","duration","newValue","VolumeController","setPlayerState","volume","setVolume","spacing","item","VolumeUp","xs","newVal","SleepTimer","sliderValue","changeSliderValue","setOpen","checkbox","setCheckbox","isTimerSet","setIsTimerSet","setTimer","clearTimeout","sleepTimerObj","sleepTimerSettings","JSON","parse","getSleepTimeFromLocalStoarge","alwaysOn","Timer","TimerOff","stepSize","gradientColorFrom","gradientColorTo","knobRadius","progressWidth","circleWidth","removeItem","stringify","setSleepTimeToLocalStorage","DownloadLoader","LinearProgress","TopBar","snackbarMsg","isSongDownloaded","setSongDownloaded","isSongDownloading","setSongDownloading","DoneOutline","GetApp","ExpandMore","MiniMuiscArt","playPause","playNext","emptyPlayer","Close","RelatedVideos","toggleMaxPlaylist","setPlaylist","playerState","relatedVideos","setRelatedVideos","setIsRepeatOn","isRepeatOn","spring","damping","stiffness","video","li","positionTransition","MusicVideo","slice","LibraryMusic","Shuffle","arry","reduce","acc","_","i","rnd","random","temp","RepeatOne","Repeat","KeyboardArrowDown","KeyboardArrowUp","dense","country_code","mode","country","fetchCountry","relatedVideosVar","previousLocation","MainPlayer","currentVideoSnippet","setCurrentVideoSnippet","isItFromPlaylist","setIsItFromPlaylist","setAudioState","setMinimized","setRating","isNextFromMini","setIsNextFromMini","body","querySelector","audioPlayer","useRef","current","setupMediaSessions","navigator","mediaSession","metadata","MediaMetadata","artist","artwork","sizes","setActionHandler","playAudio","then","catch","error","getAudio","searchRelated","relatedToVideoId","setAudioSrcAndPlay","setVideoSnippet","hidden","currentIndex","findIndex","playerStyle","transition","overflow","expandPlayer","state","modal","updateSongDB","updatePlayingSong","initPosition","containerRef","swipeHandlerMaximized","onSwipedDown","onSwiping","changedTouches","screenY","positionDifference","round","containerRefStyle","onSwiped","onSwipedRight","playTimeout","onSwipedLeft","swipeHandlerMin","fetchAndSetCurrentVideoSnippet","action","PreviousButton","NextButton","returnMaximizedPlayer","MiniMusicArt","returnMinimizedPlayer","onLoadStart","onLoadedData","onPlay","onPlaying","onPause","onEnded","autoPlay","LoginPage","lazy","SearchResult","HomePage","CustomTab","indicator","labelIcon","Tabs","CustomTabs","selected","Tab","deferredPrompt","undefined","addEventListener","searchResult","songsHistoryState","setSongsHistory","songsLikedState","setSongsLiked","songsDownloadedState","setSongsDownloaded","tabValue","setTabValue","updateCount","setUpdateCount","redirectState","setRedirectState","circularLoader","fetchSongs","getLikedSongs","getDownloadedSongs","getHistory","db","on","c","removeDownloadingState","continueToHome","prompt","userChoice","choiceResult","outcome","fallback","exact","render","videos","key","returnMainPlayer","indicatorColor","textColor","icon","Home","Favorite","History","defaultTheme","palette","indigo","main","typography","useNextVariants","darkTheme","muiDarkTheme","createMuiTheme","muiDefaultTheme","AppContainer","checkDarkMode","selectedTheme","matchMedia","matches","hrs","getHours","useCheckDarkmode","userAgent","match","overscrollBehavior","classList","add","remove","CurrentSection","App","GlobalState","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","process","origin","fetch","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","createContext","initialState","reducer","globalState","useReducer","Provider","Dexie","version","stores","videoObj","timestamp","now","playbackTimes","update","orderBy","limit","reverse","toArray","songsByTimeStamp","where","between","minKey","maxKey","likedSongs","downloadedSongs","modify","x","url","thumbURL","Promise","all","fetchProxiedBlob","thumbnailBlob","songBlob","resolve","reject","xhr","XMLHttpRequest","responseType","onload","statusText","send","abort","part","videoCategoryId","keys","split","selectRandomKey"],"mappings":"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","file":"static/js/main.e37a8b39.chunk.js","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\n// import {\n//   List,\n//   AutoSizer,\n//   CellMeasurer,\n//   CellMeasurerCache\n// } from \"react-virtualized\";\n\nimport { DynamicSizeList as List } from \"react-window-dynamic\";\n\n\nimport CompletedTick from \"../images/CompletedTick.svg\";\nimport DownloadIcon from \"../images/DownloadIcon.svg\";\n\nimport {\n  ListItem,\n  Typography,\n  ListItemAvatar,\n  Avatar,\n  Divider,\n  ListItemText\n} from \"@material-ui/core\";\n\nimport DownloadDeleteDialog from \"./DownloadDeleteDialog\";\n\nimport { GlobalContext } from \"./GlobalState\";\n\nimport getAudioLink from \"../apis/getAudioLink\";\nimport { downloadSong, deleteSongAudio } from \"../external/saveSong\";\n\n// const cache = new CellMeasurerCache({\n//   minHeight: 50,\n//   defaultHeight: 60,\n//   fixedWidth: true\n//   // keyMapper: () => 1\n// });\n\nlet currentId;\n\nexport const useSongMethods = songId => {\n  const [{}, dispatch] = useContext(GlobalContext);\n\n  const setSnackbarMsg = React.useCallback(\n    data => {\n      dispatch({ type: \"setSnackbarMsg\", snippet: data });\n    },\n    [dispatch]\n  );\n\n  const [deleteDialogState, setDeleteDialogState] = useState(false);\n  const [dontAskPopup, setDontAskPopup] = useState(null);\n\n  useEffect(() => {\n    //convert string to bool\n    const popupLocalState = localStorage.getItem(\"dontAskPopup\") === \"true\";\n    setDontAskPopup(popupLocalState);\n    // for popup settings\n  }, []);\n\n  const handleDownload = async songId => {\n    // console.log(\"here is the id\", songId);\n    const res = await getAudioLink.get(\"/song\", {\n      params: { id: songId }\n    });\n    // first we will fetch the song link then we will download it\n    // the download song function takes id and the url\n    const status = await downloadSong(songId, res.data);\n    // after the downloading is done we will remove the downloading class\n    // set the snackbar message\n    setSnackbarMsg(\"Song Downloaded\");\n    console.log(\"song status\", status);\n  };\n\n  const disablePopup = () => {\n    localStorage.setItem(\"dontAskPopup\", true);\n    setDontAskPopup(true);\n  };\n\n  const deleteTheSong = async checkBox => {\n    const deleted = await deleteSongAudio(currentId);\n    setDeleteDialogState(false);\n    setSnackbarMsg(\"Deleted Successfully\");\n\n    console.log(currentId, checkBox);\n    // we will set it to localstorage the popup option\n    if (checkBox) {\n      disablePopup();\n    }\n  };\n\n  // hadnling download dialog\n  const handleRemoveSong = songId => {\n    console.log(\"handle remove dude\");\n    currentId = songId;\n    // when user clicks on the download badge we will check the state\n    // then delete the song without showing the popup if dontAskPopup is true\n    // and delete the song by calling deleteTheSong\n    dontAskPopup ? deleteTheSong() : setDeleteDialogState(true);\n  };\n\n  const deleteDialogComponent = dontAskPopup ? null : (\n    <DownloadDeleteDialog\n      isOpen={deleteDialogState}\n      handleCancel={() => setDeleteDialogState(false)} // we will just hide the dialog on cancel\n      handleDelete={deleteTheSong} //if user wants to delete the song we will just do it\n    />\n  );\n\n  return {\n    handleDownload,\n    handleRemoveSong,\n    deleteTheSong,\n    dontAskPopup,\n    setDeleteDialogState,\n    deleteDialogState,\n    deleteDialogComponent\n  };\n};\n\nconst RenderDatabase = props => {\n  const songs = props.songs;\n  const [{}, dispatch] = useContext(GlobalContext);\n  const setCurrentVideoSnippet = data => {\n    dispatch({ type: \"setCurrentVideoSnippet\", snippet: data });\n  };\n  const setSnackbarMsg = data => {\n    dispatch({ type: \"setSnakbarMsg\", snippet: data });\n  };\n\n  const [windowHeight, setWindowHeight] = useState(window.innerHeight);\n\n  const handleClick = song => {\n    // set all the info of current clicked video in this object\n    setCurrentVideoSnippet({\n      id: song.videoId,\n      audio: song.audio,\n      thumbnail: song.thumbnail,\n      title: song.title,\n      channelTitle: song.channelTitle,\n      maxThumbnail: `https://img.youtube.com/vi/${song.videoId}/maxresdefault.jpg`,\n      sdThumbnail: `https://img.youtube.com/vi/${song.videoId}/sddefault.jpg`\n      // this is the url of the max resolution of thumbnail\n    });\n  };\n\n  const {\n    handleDownload,\n    handleRemoveSong,\n    deleteDialogComponent\n  } = useSongMethods();\n\n  const returnAnimatedClass = song => {\n    if (song.downloadState === \"downloading\") {\n      console.log(song.downloadState);\n      return \"downloading-animation\";\n    } else {\n      return \"\";\n    }\n  };\n\n\n\n\n  useEffect(() => {\n    setWindowHeight(window.innerHeight);\n  });\n\n  const renderResult = songs.map((song, index) => {\n    return (\n      <>\n        <ListItem\n          alignItems=\"flex-start\"\n          button\n          onClick={() => handleClick(song)}\n          // component={Link}\n          // to={{ pathname: \"/play\", search: `?id=${song.videoId}`, state: { modal: true } }}\n        >\n          <ListItemAvatar>\n            <Avatar\n              className=\"searchThumb\"\n              style={{ width: \"60px\", height: \"60px\", marginRight: \"15px\" }}\n              alt={song.title}\n              src={`https://img.youtube.com/vi/${song.videoId}/default.jpg`}\n            />\n          </ListItemAvatar>\n          {/* we will play the song when clicked on title */}\n          <ListItemText\n            primary={song.title}\n            secondary={\n              <React.Fragment>\n                <Typography\n                  component=\"span\"\n                  variant=\"body2\"\n                  color=\"textPrimary\"\n                >\n                  {song.channelTitle}\n                </Typography>\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n        <div\n          className=\"download-container\"\n          onClick={() =>\n            song.audio\n              ? handleRemoveSong(song.videoId)\n              : handleDownload(song.videoId)\n          }\n        >\n          <div className=\"badge-container\">\n            {/* if there is audio file then we will show tick mark icon */}\n            <img\n              className={returnAnimatedClass(song)}\n              src={song.audio ? CompletedTick : DownloadIcon}\n              alt=\"downloading icon\"\n            />\n          </div>\n        </div>\n      </>\n    );\n  });\n\n  const renderItem = React.forwardRef((row, ref) => (\n    <div\n      ref={ref}\n      style={{\n        ...row.style,\n        maxWidth: \"1000px\",\n        left: \"50%\",\n        transform: \"translateX(-50%)\"\n      }}\n    >\n      {renderResult[row.index]}\n      <Divider />\n    </div>\n  ));\n  return (\n    <>\n      {deleteDialogComponent}\n\n      <List\n        height={window.innerHeight - 100}\n        itemCount={songs.length}\n        width={window.innerWidth}\n      >\n        {renderItem}\n      </List>\n    </>\n  );\n};\n\nexport default RenderDatabase;\n","export default __webpack_public_path__ + \"static/media/CompletedTick.997be658.svg\";","export default __webpack_public_path__ + \"static/media/DownloadIcon.99d55e74.svg\";","import React, { useState } from \"react\";\nimport { FormControlLabel, Checkbox } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nconst DownloadDeleteDialog = ({ isOpen, handleCancel, handleDelete }) => {\n  const [checkBox, setCheckBox] = useState(false);\n\n  React.useEffect(() => {\n    console.log(checkBox);\n  }, [checkBox]);\n\n  return (\n    <div>\n      <Dialog\n        style={{ zIndex: 1500 }}\n        open={isOpen}\n        onClose={handleCancel}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Delete this song from your device ?\"}\n        </DialogTitle>\n        <DialogContent>\n          <FormControlLabel\n            control={\n              <Checkbox\n                color=\"secondary\"\n                checked={checkBox}\n                onChange={e => setCheckBox(e.target.checked)}\n                value=\"checkBox\"\n              />\n            }\n            label=\"Don't ask again\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCancel} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={() => handleDelete(checkBox)} color=\"primary\">\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default DownloadDeleteDialog;\n","import axios from \"axios\";\nimport jsonpAdapter from \"axios-jsonp\"\n\nexport default axios.create({\n  baseURL: \"https://suggestqueries.google.com/complete/search?\",\n  adapter: jsonpAdapter,\n  params: {\n    hl: \"en\", // Language\n    ds: \"yt\", // Restrict lookup to youtube\n    client: \"youtube\" // force youtube style response, i.e. jsonp\n  }\n});\n","import React from \"react\";\nimport { List, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\n\nconst AutoSearchResult = ({ results, onSearchSelect }) => {\n  let renderResult = [];\n  if (results) {\n    renderResult = results.map((result, index) => {\n      return (\n        <ListItem key={index} onClick={() => onSearchSelect(result[0])} button>\n          <ListItemIcon style={{ paddingLeft: \"16px\" }}>\n            <Search />\n          </ListItemIcon>\n          <ListItemText primary={result[0]} />\n        </ListItem>\n      );\n    });\n  }\n  return <List>{renderResult}</List>;\n};\n\nexport default AutoSearchResult;\n","import React, { useContext, useState, useEffect, useCallback } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport {\n  InputBase,\n  IconButton,\n  Popper,\n  CircularProgress,\n  Grid\n} from \"@material-ui/core\";\nimport { ArrowBack } from \"@material-ui/icons\";\n\nimport { GlobalContext } from \"../GlobalState\";\nimport suggestSearch from \"../../apis/suggestSearch\";\nimport AutoSearchResult from \"./AutoSearchResult\";\nimport youtubeSearch from \"../../apis/youtubeSearch\";\n\nconst SearchBox = ({ history, location }) => {\n  let params = new URLSearchParams(location.search);\n\n  const [{ searchState }, dispatch] = useContext(GlobalContext);\n\n  const setSearchState = useCallback(\n    data => {\n      dispatch({ type: \"setSearchState\", snippet: data });\n    },\n    [dispatch]\n  );\n\n  const setSearchResult = useCallback(\n    data => {\n      console.log(data);\n      dispatch({ type: \"setSearchResult\", snippet: data });\n    },\n    [dispatch]\n  );\n\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [autoSearchData, setAutoSearch] = useState(\"\");\n\n  const [ytSearchQuery, setYtSearchQuery] = useState(null);\n\n  // toggle popper\n  const [isPopperOpen, setPopper] = useState(true);\n\n  console.log(\"search box re rendered\");\n\n  // get back the selected search data\n  const onSearchSelect = result => {\n    setSearchQuery(result);\n    setYtSearchQuery(result);\n    setSearchState(\"searching\");\n    history.push({ pathname: \"/search\", search: `?q=${result}` });\n  };\n\n  // when user hits enter then also fetch the data from yt api\n  const onSearchSubmit = e => {\n    e.preventDefault();\n    console.log(e.target.lastChild);\n    e.target.lastChild.lastChild.blur();\n    setSearchState(\"searching\");\n    setYtSearchQuery(searchQuery);\n    history.push({ pathname: \"/search\", search: `?q=${searchQuery}` });\n  };\n\n  // for controlled input change\n  const onChange = e => {\n    setSearchQuery(e.target.value);\n    getAutocomplete();\n  };\n\n  // get autocomplete data form api\n  const getAutocomplete = async () => {\n    const response = await suggestSearch.get(\"\", {\n      params: {\n        q: searchQuery\n      }\n    });\n    setAutoSearch(response.data[1]);\n  };\n\n  // get youtube search result from api\n  useEffect(() => {\n    const searchYt = async data => {\n      const res = await youtubeSearch.get(\"/search\", {\n        params: {\n          q: data,\n          maxResults: 15\n        }\n      });\n      setSearchResult(res.data.items);\n      setSearchState(\"completed\");\n    };\n    // only search if there is any value\n    if (ytSearchQuery && ytSearchQuery !== \"\") {\n      searchYt(ytSearchQuery);\n    }\n    // console.log(ytSearchQuery);\n  }, [ytSearchQuery, setSearchResult, setSearchState]);\n\n  useEffect(() => {\n    console.log(\"search state\", searchState);\n  }, [searchState]);\n\n  useEffect(() => {\n    // Listen for changes to the current location.\n    const query = params.get(\"q\");\n    if (query) {\n      setYtSearchQuery(query);\n      setSearchQuery(query);\n      setSearchState(\"searching\");\n      console.log(\"changing query to\", query);\n    }\n\n    // const unlisten = history.listen(location => {\n    //   // setYtSearchQuery(params.get(\"q\"));\n    //   // we will se the q from params\n    //   // location is an object like window.location\n    //   const path = location.pathname;\n    //   // if (path.slice(1, 7) === \"search\" || path.slice(1, 5) === \"song\") {\n    //   //   setSearchState(\"searched\");\n    //   // } else {\n    //   //   setSearchState(\"home\");\n    //   // }\n    // });\n  }, [setSearchState, setYtSearchQuery]);\n\n  // show loading icon while we fetch the results from api\n\n  const popperResult = () => {\n    switch (searchState) {\n      case \"searching\":\n        return (\n          <Grid\n            style={{ height: \"100vh\" }}\n            container\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <CircularProgress />\n          </Grid>\n        );\n      case \"clicked\":\n        return (\n          <AutoSearchResult\n            results={autoSearchData}\n            onSearchSelect={onSearchSelect}\n          />\n        );\n      case \"completed\":\n        setPopper(false);\n        break;\n      default:\n        break;\n    }\n    console.log(\"Function ran\");\n  };\n\n  return (\n    <>\n      <IconButton\n        onClick={() => {\n          setSearchState(\"home\");\n          if (history.location.pathname === \"/search\") {\n            history.goBack();\n          }\n          // only go back if u have searched something\n        }}\n        color=\"inherit\"\n        aria-label=\"Menu\"\n      >\n        <ArrowBack />\n      </IconButton>\n      <form style={{ width: \"100%\" }} onSubmit={e => onSearchSubmit(e)}>\n        <InputBase\n          fullWidth\n          placeholder=\"Search...\"\n          autoFocus\n          style={{ color: \"#fff\", paddingLeft: \"16px\" }}\n          value={searchQuery}\n          onChange={onChange}\n          // on click we will show popper\n          onClick={() => {\n            setSearchState(\"clicked\");\n            setPopper(true);\n          }}\n        />\n      </form>\n\n      <Popper\n        className=\"searchPopper\"\n        open={isPopperOpen}\n        anchorEl={document.getElementById(\"navbar\")}\n        popperOptions={{\n          modifiers: {\n            preventOverflow: {\n              padding: 0\n            }\n          }\n        }}\n        placement=\"bottom\"\n      >\n        {popperResult}\n      </Popper>\n    </>\n  );\n};\n\nexport default withRouter(SearchBox);\n","import React, { useContext } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { GlobalContext } from \"../GlobalState\";\nimport SearchBox from \"./SearchBox\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Slide\n} from \"@material-ui/core/\";\n\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\n\nimport { Search } from \"@material-ui/icons/\";\n\n\nfunction HideOnScroll(props) {\n  const { children } = props;\n  const trigger = useScrollTrigger();\n\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      {children}\n    </Slide>\n  );\n}\n\nfunction SimpleAppBar(props) {\n  const [{ searchState }, dispatch] = useContext(GlobalContext);\n\n  const setMenuOpen = data => {\n    console.log(data);\n    dispatch({ type: \"setMenuOpen\", snippet: data });\n  };\n  const setSearchState = React.useCallback(\n    data => {\n      console.log(data);\n      dispatch({ type: \"setSearchState\", snippet: data });\n    },\n    [dispatch]\n  );\n\n  React.useEffect(() => {\n    // if the page is on search we will change the search state\n    const changeAppBar = () => {\n      const path = props.history.location.pathname;\n      if (path === \"/search\") {\n        setSearchState(\"searching\");\n      } else {\n        setSearchState(\"home\");\n      }\n      console.log(\"history change detected in app bar\");\n    };\n\n    changeAppBar();\n    const unlisten = props.history.listen(location => {\n      changeAppBar();\n    });\n  }, [setSearchState, props.history]);\n\n  const toggleSearch = () => {\n    if (searchState === \"home\") {\n      return (\n        <>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"Menu\"\n            onClick={() => setMenuOpen(true)}\n          >\n            <h1 className=\"simpleAppBar\" style={{ fontFamily: \"'Pacifico', cursive\", margin: 0, padding: 0, fontSize: \"24px\", height: \"45px\", width: \"45px\" }}>M</h1>\n          </IconButton>\n\n          <IconButton\n            onClick={() => setSearchState(\"clicked\")}\n            color=\"inherit\"\n            aria-label=\"Search\"\n          >\n            <Search />\n          </IconButton>\n        </>\n      );\n    } else {\n      return <SearchBox />;\n    }\n  };\n\n  return (\n    <>\n      <HideOnScroll {...props}>\n        <AppBar id=\"navbar\" position=\"sticky\">\n          <Toolbar style={{ justifyContent: \"space-between\" }}>{toggleSearch()}</Toolbar>\n        </AppBar>\n      </HideOnScroll>\n    </>\n  );\n}\n\nexport default withRouter(SimpleAppBar);\n","import React, { useState, useContext, useEffect, useCallback } from \"react\";\n\nimport {\n  SwipeableDrawer,\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Link as MaterialLink,\n} from \"@material-ui/core\";\n\nimport {\n  Settings\n} from \"@material-ui/icons\";\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\n\nimport { Link } from \"react-router-dom\";\n\nimport { GlobalContext } from \"./GlobalState\";\nimport \"./darkMode.css\";\n\n\n\nconst SwipeMenu = () => {\n  const [{ menuOpen, themeSelectValue }, dispatch] = useContext(GlobalContext);\n\n  const setMenuOpen = data => {\n    dispatch({ type: \"setMenuOpen\", snippet: data });\n  };\n\n  const setThemeSelectValue = useCallback(\n    data => {\n      dispatch({ type: \"setThemeSelectValue\", snippet: data });\n    },\n    [dispatch]\n  );\n\n  const [isNight, setIsNight] = useState(false);\n\n  useEffect(() => {\n    if (themeSelectValue === \"Dark\") {\n      setIsNight(true);\n    } else {\n      setIsNight(false);\n    }\n  }, [themeSelectValue]);\n\n  const changeTheme = theme => {\n    setThemeSelectValue(theme);\n    localStorage.setItem(\"selectedTheme\", theme);\n  };\n\n  const handleThemeToggle = () => {\n    if (!isNight) {\n      changeTheme(\"Dark\");\n      setIsNight(false);\n    } else {\n      changeTheme(\"Default\");\n      setIsNight(true);\n    }\n  };\n\n\n\n\n  return (\n    <SwipeableDrawer\n      open={menuOpen}\n      onClose={() => setMenuOpen(false)}\n      onOpen={() => setMenuOpen(true)}\n    >\n      <div style={{ width: \"300px\" }}>\n        <div\n          style={{\n            margin: \"35px\",\n            position: \"relative\",\n            width: \"30px\",\n            height: \"30px\",\n            display: \"flex\"\n          }}\n        >\n          <FormGroup style={{ justifyContent: \"space-evenly\" }}>\n            <p style={{ color: \"#fff\", margin: \"16px\" }}>Light</p>\n            <FormControlLabel\n              control={<Switch checked={isNight} onChange={() => handleThemeToggle()} />}\n            />\n            <p style={{ color: \"#000\" }}>Dark</p>\n          </FormGroup>\n\n        </div>\n\n        <Divider />\n\n        <List\n          component=\"nav\"\n          className={\"pinkLists\"}\n          onClick={() => setMenuOpen(false)}\n        >\n          <ListItem button component={Link} to=\"/settings\">\n            <ListItemIcon>\n              <Settings />\n            </ListItemIcon>\n            <ListItemText primary=\"Settings\" />\n          </ListItem>\n          <ListItem\n            button\n            component={MaterialLink}\n            target=\"blank\"\n            href=\"https://github.com/S-Techofficial/Moodify-Prototype\"\n          >\n            <ListItemIcon>\n              <svg\n                width=\"24\"\n                aria-hidden=\"true\"\n                focusable=\"false\"\n                data-prefix=\"fab\"\n                data-icon=\"github\"\n                role=\"img\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 496 512\"\n                fill=\"#e91e63\"\n              >\n                <path d=\"M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z\" />\n              </svg>\n            </ListItemIcon>\n            <ListItemText primary=\"Github\" />\n          </ListItem>\n        </List>\n      </div>\n    </SwipeableDrawer>\n  );\n};\n\nexport default SwipeMenu;\n","import React, { useContext, useEffect, useCallback } from \"react\";\nimport {\n  Container,\n  FormControl,\n  Select,\n  MenuItem,\n  FormGroup,\n  FormControlLabel,\n  Box,\n  Typography\n} from \"@material-ui/core\";\n\nimport { GlobalContext } from \"../GlobalState\";\n\nexport const useCheckDarkmode = () => {\n  const [, dispatch] = useContext(GlobalContext);\n  const setThemeSelectValue = useCallback(\n    data => {\n      dispatch({ type: \"setThemeSelectValue\", snippet: data });\n    },\n    [dispatch]\n  );\n  const checkDarkMode = () => {\n    const selectedTheme = localStorage.getItem(\"selectedTheme\");\n\n    // we will check if system dark mode is enabled or not\n\n    const colorScheme = window.matchMedia(\"(prefers-color-scheme: dark)\");\n    colorScheme.addEventListener(\"change\", e => {\n      if (e.matches) {\n        // if it matches we will set it to dark else default\n        setThemeSelectValue(\"Dark\");\n      } else {\n        setThemeSelectValue(\"Default\");\n      }\n    });\n    if (selectedTheme) {\n      console.log(selectedTheme);\n      setThemeSelectValue(selectedTheme);\n\n      const date = new Date();\n      const hrs = date.getHours();\n\n      // if the theme is auto then only do it\n      if (selectedTheme === \"Auto\") {\n        if (hrs >= 18 || hrs <= 6) {\n          setThemeSelectValue(\"Dark\");\n        } else {\n          setThemeSelectValue(\"Default\");\n        }\n      }\n    }\n  };\n\n  return { checkDarkMode };\n};\n\nconst SettingsPage = () => {\n  const [{ themeSelectValue }, dispatch] = useContext(GlobalContext);\n  const setThemeSelectValue = useCallback(\n    data => {\n      dispatch({ type: \"setThemeSelectValue\", snippet: data });\n    },\n    [dispatch]\n  );\n  const handleThemeChange = e => {\n    setThemeSelectValue(e.target.value);\n    localStorage.setItem(\"selectedTheme\", e.target.value);\n  };\n\n  useEffect(() => {\n    console.log(themeSelectValue);\n  }, [themeSelectValue]);\n\n  const selectComp = (\n    <Box m={1}>\n      \n      <Select\n        value={themeSelectValue}\n        onChange={handleThemeChange}\n        displayEmpty\n        name=\"age\"\n      >\n        <MenuItem value=\"Default\">Default</MenuItem>\n        <MenuItem value=\"Dark\">Dark</MenuItem>\n        <MenuItem value=\"Auto\">Auto</MenuItem>\n      </Select>\n    </Box>\n  );\n  return (\n    <Container>\n      <br />\n      <Typography variant=\"h5\" align=\"center\" gutterBottom>\n        Settings\n      </Typography>\n      <FormControl component=\"fieldset\">\n        <FormGroup row>\n          <FormControlLabel\n            labelPlacement=\"start\"\n            label=\"Select Theme \"\n            value=\"top\"\n            control={selectComp}\n          />\n        </FormGroup>\n      </FormControl>\n    </Container>\n  );\n};\nexport default SettingsPage;\n","import React, { useState } from \"react\";\nimport { IconButton, CircularProgress } from \"@material-ui/core/\";\nimport {\n  PauseCircleFilled,\n  PlayCircleFilled,\n  Pause,\n  PlayArrow\n} from \"@material-ui/icons/\";\n\nconst PlayPauseButton = ({ player, audioState, minimized }) => {\n  const togglePlayPause = e => {\n    if (audioState === \"playing\") {\n      player.pause();\n    } else if (audioState === \"paused\") {\n      player.play();\n    }\n    e.stopPropagation();\n  };\n\n  const showPlayPause = () => {\n    if (audioState === \"playing\") {\n      // if the state will be minimized then we will return the nromal pause button\n      if (minimized) {\n        return <Pause style={{ fontSize: \"3em\", opacity: \".8\" }} />;\n      }\n      return <PauseCircleFilled style={{ fontSize: \"4em\" }} color=\"primary\" />;\n    } else if (audioState === \"paused\" || audioState === \"loaded\") {\n      if (minimized) {\n        return <PlayArrow style={{ fontSize: \"3em\", opacity: \".8\" }} />;\n      }\n      return <PlayCircleFilled style={{ fontSize: \"4em\" }} color=\"primary\" />;\n    } else if (audioState === \"loading\") {\n      return <CircularProgress />;\n    }\n  };\n\n  return (\n    <IconButton\n      size=\"small\"\n      color={minimized ? \"secondary\" : \"primary\"}\n      aria-label=\"Pause\"\n      onClick={togglePlayPause}\n      disableFocusRipple={true}\n      disableRipple={true}\n    >\n      {showPlayPause()}\n    </IconButton>\n  );\n};\n\nexport default PlayPauseButton;\n","import React from \"react\";\nimport { IconButton } from \"@material-ui/core/\";\nimport { SkipNext } from \"@material-ui/icons/\";\n\nconst PlayPauseButton = ({onPlayNext}) => {\n  return (\n    <IconButton color=\"primary\" aria-label=\"Next\" onClick={onPlayNext}>\n      <SkipNext fontSize=\"large\"/>\n    </IconButton>\n  );\n};\n\nexport default PlayPauseButton","import React from \"react\";\nimport { IconButton } from \"@material-ui/core/\";\nimport { SkipPrevious } from \"@material-ui/icons/\";\n\nconst PlayPauseButton = ({playPrevious}) => {\n  return (\n    <IconButton color=\"primary\" aria-label=\"Pause\" onClick={playPrevious}>\n      <SkipPrevious fontSize=\"large\"/>\n    </IconButton>\n  );\n};\n\nexport default PlayPauseButton","export default __webpack_public_path__ + \"static/media/dottedCircle.02a1e209.svg\";","import React, { useState, useCallback } from \"react\";\nimport { useSwipeable } from \"react-swipeable\";\nimport { motion } from \"framer-motion\";\nimport { Avatar, Grid, Typography } from \"@material-ui/core\";\nimport { FavoriteTwoTone } from \"@material-ui/icons\";\nimport circleSvg from \"../../images/dottedCircle.svg\";\nimport { rateSong } from \"../../external/saveSong\";\n\nconst dblTouchTapMaxDelay = 300;\nlet latestTouchTap = {\n  time: 0,\n  target: null\n};\n\nfunction isDblTouchTap(event) {\n  const touchTap = {\n    time: new Date().getTime(),\n    target: event.currentTarget\n  };\n  const isFastDblTouchTap =\n    touchTap.target === latestTouchTap.target &&\n    touchTap.time - latestTouchTap.time < dblTouchTapMaxDelay;\n  latestTouchTap = touchTap;\n  return isFastDblTouchTap;\n}\n\n\nconst MusicArt = ({ data, rating, audioEl }) => {\n  const swipeUpHandler = useSwipeable({\n    onSwipedUp: e => {\n      dislikeSong();\n    }\n  });\n\n  const [heartStyle, setHeartStyle] = useState({\n    transform: \"scale(0)\"\n  });\n\n\n\n\n  // if its less than 400 width we will use default hq thumbnail\n  const checkImg = e => {\n    if (e.target.naturalWidth < 400) {\n      e.target.src = data.sdThumbnail;\n    }\n  };\n\n  // double tap to like the song\n  const likeSong = useCallback(() => {\n    // run the like function to like provided with song id and rating\n    setHeartStyle({ transform: \"scale(0)\" });\n    setTimeout(() => {\n      setHeartStyle({ transform: \"scale(1)\" });\n    }, 300);\n  }, [setHeartStyle]);\n\n  const dislikeSong = useCallback(() => {\n    rateSong(data.id, \"disliked\");\n    setHeartStyle({ transform: \"scale(0)\" });\n    setTimeout(() => {\n      setHeartStyle({ transform: \"scale(1)\", color: \"#2d3436\" });\n    }, 300);\n  }, [setHeartStyle, data.id]);\n\n  React.useEffect(() => {\n    if (rating === \"liked\") {\n      likeSong();\n    } else if (rating === \"disliked\") {\n      dislikeSong();\n    } else {\n      setHeartStyle({ transform: \"scale(0)\" });\n    }\n  }, [rating, likeSong, dislikeSong, setHeartStyle]);\n\n  // if we find the channel name is before the song title we will remove it\n  //using the regex\n  const shortTitle = data => {\n    // this regex is to remove channel name from song title\n    const re = new RegExp(data.channelTitle + \" - | : \", \"g\");\n\n    return data.title.replace(re, \"\");\n  };\n\n  const getThumbnail = () => {\n    // if the thumbnail is downloaded then get it from database or else use the url to fetch\n    if (data.thumbnail) {\n      return window.URL.createObjectURL(data.thumbnail);\n    } else {\n      return data.maxThumbnail;\n    }\n  };\n\n  const artContainerStyle = {\n    background: `url(${circleSvg}) no-repeat`,\n    padding: \"18px\",\n    position: \"relative\",\n    zIndex: \"1\"\n  };\n\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justify=\"center\"\n      alignItems=\"center\"\n      style={{ marginTop: \"40px\" }}\n      onClick={e => {\n        if (isDblTouchTap(e)) {\n          likeSong();\n          rateSong(data.id, \"liked\", audioEl);\n        }\n        // call the like song function on double tap\n      }}\n    >\n      <motion.div\n        className=\"box\"\n        drag\n        dragElastic={true}\n        dragTransition={{ bounceStiffness: 100, bounceDamping: 10 }}\n        dragConstraints={{ left: 0, right: 0, top: 0, bottom: 0 }}\n        style={artContainerStyle}\n        {...swipeUpHandler}\n      >\n        <FavoriteTwoTone className={\"songHeart left\"} style={heartStyle} />\n        <FavoriteTwoTone className={\"songHeart right\"} style={heartStyle} />\n        <Avatar\n          className=\"searchThumb\"\n          style={{\n            width: \"215px\",\n            height: \"215px\",\n            boxShadow: \"#0000008c 1px 3px 8px\"\n          }}\n          alt=\"video thumbnail\"\n          src={getThumbnail()}\n          imgProps={{ onLoad: e => checkImg(e) }}\n        />\n      </motion.div>\n      <br />\n      <Typography color=\"secondary\" variant=\"h5\" className=\"musicArtTitle\" align=\"center\">\n        {shortTitle(data)}\n      </Typography>\n      <Typography color=\"secondary\" variant=\"subtitle1\">\n        {data.channelTitle}\n      </Typography>\n      <br />\n    </Grid>\n  );\n};\n\nexport default MusicArt;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport {\n  Dialog,\n  Switch,\n  DialogActions,\n  Button,\n  FormControlLabel,\n  FormControl,\n  DialogTitle,\n  Typography\n} from \"@material-ui/core\";\nimport { TimerOff, Timer } from \"@material-ui/icons\";\nimport { CircleSlider } from \"react-circle-slider\";\n\nimport \"./SleepTimerStyle.css\";\n\nconst setSleepTimeToLocalStorage = (time, alwaysOn) => {\n  const sleepTimerSettings = JSON.stringify({ time: time, alwaysOn: alwaysOn });\n\n  localStorage.setItem(\"sleepTimerSettings\", sleepTimerSettings);\n};\n\nconst getSleepTimeFromLocalStoarge = () => {\n  const sleepTimerSettings = localStorage.getItem(\"sleepTimerSettings\");\n  return JSON.parse(sleepTimerSettings);\n};\n\nconst removeSleepTimer = () => {\n  localStorage.removeItem(\"sleepTimerSettings\");\n};\n\nlet timerTimeout;\n\nfunction SleepTimer({ player }) {\n  const [sliderValue, changeSliderValue] = useState(20);\n  const [open, setOpen] = useState(false);\n  const [checkbox, setCheckbox] = useState(false);\n  const [isTimerSet, setIsTimerSet] = useState(false);\n\n  const setTimer = time => {\n    console.log(\"timer has been set with time\", time);\n    clearTimeout(timerTimeout);\n    setIsTimerSet(true);\n    timerTimeout = setTimeout(() => {\n      player.pause(); //pause after music finished\n    }, time * 60 * 1000);\n  };\n\n  useEffect(() => {\n    const sleepTimerObj = getSleepTimeFromLocalStoarge();\n    if (sleepTimerObj) {\n      changeSliderValue(sleepTimerObj.time);\n      setCheckbox(sleepTimerObj.alwaysOn);\n    }\n\n    //only set timer when there is no timer\n    if (sleepTimerObj && sleepTimerObj.alwaysOn) {\n      console.log(sleepTimerObj);\n      setTimer(sleepTimerObj.time);\n    }\n    console.log(sleepTimerObj);\n  }, []);\n\n  const handleSetTimer = () => {\n    setSleepTimeToLocalStorage(sliderValue, checkbox);\n    //   then also set a set timeout\n    // if there is any timer already clear it\n    setOpen(false);\n    setTimer(sliderValue);\n  };\n\n  const handleRemove = () => {\n    removeSleepTimer();\n    setIsTimerSet(false);\n    setOpen(false);\n  };\n\n  return (\n    <>\n      {isTimerSet ? (\n        <Timer color=\"primary\" onClick={() => setOpen(true)} />\n      ) : (\n        <TimerOff color=\"primary\" onClick={() => setOpen(true)} />\n      )}\n      <Dialog\n        style={{ zIndex: 1400 }}\n        open={open}\n        onClose={() => setOpen(false)}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <Typography\n          variant=\"h5\"\n          color=\"primary\"\n          align=\"center\"\n          style={{ marginTop: \"10px\" }}\n        >\n          Pause Music After\n        </Typography>\n        <div className=\"container\">\n          <div className=\"textContainer\">\n            {sliderValue}\n            <div className=\"minute\">MINUTES</div>\n          </div>\n          <CircleSlider\n            value={sliderValue}\n            stepSize={5}\n            onChange={value => changeSliderValue(value)}\n            size={300}\n            max={120}\n            gradientColorFrom=\"#6A82FB\"\n            gradientColorTo=\"#FC5C7D\"\n            knobRadius={25}\n            progressWidth={30}\n            circleWidth={30}\n          />\n        </div>\n\n        <DialogActions>\n          <FormControlLabel\n            value=\"Always On\"\n            control={\n              <Switch\n                checked={checkbox}\n                onChange={e => setCheckbox(e.target.checked)}\n                value=\"checked always on\"\n                color=\"primary\"\n              />\n            }\n            label=\"ALWAYS\"\n            labelPlacement=\"end\"\n            style={{ color: \"#e91e63\" }}\n          />\n          <Button color=\"primary\" onClick={handleRemove}>\n            Remove\n          </Button>\n\n          <Button color=\"primary\" onClick={handleSetTimer}>\n            Set\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nexport default SleepTimer;\n","import React, { useState, useEffect } from \"react\";\nimport { withStyles, Typography, Grid, Slider } from \"@material-ui/core/\";\n\nconst PrettoSlider = withStyles({\n  root: {\n    height: 6\n  },\n  thumb: {\n    height: 16,\n    width: 16,\n    marginTop: -5.3,\n    marginLeft: -8,\n    \"&::before\": {\n      content: \"''\",\n      height: \"inherit\",\n      width: \"inherit\",\n      position: \"absolute\",\n      transform: \"scale(1.6)\",\n      borderRadius: \"50px\",\n      border: \"1px solid\"\n    }\n  },\n  track: {\n    height: 6,\n    borderRadius: 4\n  },\n  rail: {\n    height: 6,\n    borderRadius: 4\n  }\n})(Slider);\n\nconst MiniSlider = withStyles({\n  root: {\n    height: 4,\n    position: \"relative\",\n    bottom: \"16px\",\n    color: \"#FFFDFD\",\n    padding: 0\n  },\n  thumb: {\n    display: \"none\"\n  },\n  track: {\n    height: 4,\n    borderRadius: 0\n  },\n  rail: {\n    height: 4,\n    borderRadius: 0\n  }\n})(Slider);\n\nconst formatTime = secs => {\n  let minutes = Math.floor(secs / 60);\n  let seconds = Math.ceil(secs - minutes * 60);\n\n  if (seconds < 10) seconds = `0${seconds}`;\n\n  return `${minutes}:${seconds}`;\n};\n\nconst TimelineController = ({ audioState, player, minimized }) => {\n  const [value, setValue] = useState(50);\n  const [currentTime, setCurrentTime] = useState(0);\n\n  useEffect(() => {\n    if (player) {\n      setCurrentTime(player.currentTime);\n    }\n    // we will update the time of player every 800ms\n    let setTimeInterval;\n    if (audioState === \"playing\") {\n      setTimeInterval = setInterval(() => {\n        setCurrentTime(player.currentTime);\n        console.log()\n      }, 800);\n    } else {\n      clearInterval(setTimeInterval);\n    }\n    return () => clearInterval(setTimeInterval);\n  }, [audioState, player]);\n\n  const handleChange = (event, newValue) => {\n    player.currentTime = newValue;\n    setCurrentTime(newValue);\n  };\n\n  const showDuration = () => {\n    if (player) {\n      if (player.duration) {\n        return formatTime(player.duration);\n      } else {\n        return \"0:00\";\n      }\n    } else {\n      return 0;\n    }\n  };\n\n  // condition rendering\n  if (minimized) {\n    return (\n      <MiniSlider value={currentTime} max={player ? player.duration : 0} />\n    );\n  } else {\n    return (\n      <div style={{ margin: \"0 auto\", width: \"90%\" }}>\n        <Grid container direction=\"row\" justify=\"space-between\">\n          <Typography variant=\"body1\" color=\"primary\">\n            {formatTime(currentTime)}\n          </Typography>\n          <Typography variant=\"body1\" color=\"primary\">\n            {showDuration()}\n          </Typography>\n        </Grid>\n\n        <PrettoSlider\n          value={currentTime}\n          onChange={handleChange}\n          max={player ? player.duration : 0}\n        />\n      </div>\n    );\n  }\n};\n\nexport default TimelineController;\n","import React, { useState } from \"react\";\nimport { IconButton, Grid, Slider } from \"@material-ui/core/\";\nimport { VolumeUp } from \"@material-ui/icons/\";\n\nconst VolumeController = ({ player, setPlayerState }) => {\n  const [volume, setVolume] = useState(100);\n\n  const volumeChange = (e, newVal) => {\n    setVolume(newVal);\n    player.volume = newVal / 100;\n    //\n  };\n\n\n  return (\n\n      <Grid container spacing={1} style={{ maxWidth: \"200px\" }}>\n        <Grid item>\n          <VolumeUp color=\"primary\" />\n        </Grid>\n        <Grid item xs={3}>\n          <Slider value={volume} onChange={volumeChange} />\n        </Grid>\n      </Grid>\n  );\n};\n\nexport default VolumeController;\n","import React, { useContext, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\n\nimport {\n  List,\n  ListItem,\n  Typography,\n  ListItemIcon,\n  ListItemText,\n  Grid,\n  Divider,\n  LinearProgress\n} from \"@material-ui/core\";\n\nimport {\n  MusicVideo,\n  LibraryMusic,\n  Shuffle,\n  Repeat,\n  KeyboardArrowUp,\n  KeyboardArrowDown,\n  RepeatOne\n} from \"@material-ui/icons\";\n\nimport { GlobalContext } from \"./GlobalState\";\n\nlet renderResult;\n\n// written by @bushblade\nconst shuffle = arry =>\n  arry.reduce(\n    (acc, _, i) => {\n      const rnd = Math.floor(Math.random() * acc.length),\n        temp = acc[i];\n      acc[i] = acc[rnd];\n      acc[rnd] = temp;\n      return acc;\n    },\n    [...arry]\n  );\n\nconst RelatedVideos = ({\n  toggleMaxPlaylist,\n  setPlaylist,\n  playerState,\n  relatedVideos,\n  setRelatedVideos,\n  setIsRepeatOn,\n  isRepeatOn\n}) => {\n  const [{}, dispatch] = useContext(GlobalContext);\n  const setCurrentVideoSnippet = data => {\n    dispatch({ type: \"setCurrentVideoSnippet\", snippet: data });\n  };\n  const handleShuffleClick = () => {\n    setRelatedVideos(shuffle(relatedVideos));\n  };\n\n  const spring = {\n    type: \"spring\",\n    damping: 20,\n    stiffness: 300\n  };\n  const handleClick = video => {\n    // set all the info of current clicked video in this object\n    setCurrentVideoSnippet({\n      id: video.id.videoId,\n      title: video.snippet.title,\n      channelTitle: video.snippet.channelTitle,\n      maxThumbnail: `https://img.youtube.com/vi/${video.id.videoId}/maxresdefault.jpg`,\n      sdThumbnail: `https://img.youtube.com/vi/${video.id.videoId}/sddefault.jpg`\n      // this is the url of the max resolution of thumbnail\n    });\n    setPlaylist();\n  };\n\n  if (relatedVideos.length > 1) {\n    renderResult = relatedVideos.map(song => {\n      return (\n        <motion.li key={song.id.videoId} positionTransition={spring}>\n          <ListItem\n            // key={song.id.videoId}\n            button\n            onClick={() => handleClick(song)}\n            // component={Link}\n            // replace\n            // to={{ pathname: \"/play\", search: `?id=${song.id.videoId}` }}\n          >\n            <ListItemIcon>\n              <MusicVideo style={{ color: \"#fff\" }} />\n            </ListItemIcon>\n            <ListItemText\n              primary={song.snippet.title.slice(0, 40)}\n              secondary={song.snippet.channelTitle.slice(0, 40)}\n            />\n          </ListItem>\n        </motion.li>\n      );\n    });\n  } else {\n    return <LinearProgress />;\n  }\n\n  const returnPlaylistExpandBtn = () => {\n    if (playerState === \"playlist\") {\n      return <KeyboardArrowDown onClick={toggleMaxPlaylist} />;\n    } else {\n      return <KeyboardArrowUp onClick={toggleMaxPlaylist} />;\n    }\n  };\n\n  return (\n    <div className=\"RelatedVideoContainer\">\n      <Grid\n        className={\"playlistHeader\"}\n        container\n        direction=\"row\"\n        alignItems=\"center\"\n        justify=\"space-between\"\n      >\n        <LibraryMusic />\n        <Typography variant=\"h6\">Coming Next</Typography>\n        <Shuffle onClick={handleShuffleClick} />\n        {/* this will show the repeat button and repeat the song */}\n        {isRepeatOn ? (\n          <RepeatOne onClick={setIsRepeatOn} />\n        ) : (\n          <Repeat onClick={setIsRepeatOn} />\n        )}\n        {returnPlaylistExpandBtn()}\n      </Grid>\n      <List dense={true}>{renderResult}</List>\n    </div>\n  );\n};\n\nexport default RelatedVideos;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport {\n  IconButton,\n  Grid,\n  Slider,\n  LinearProgress,\n  makeStyles,\n  withStyles\n} from \"@material-ui/core/\";\n\nimport {\n  ExpandMore,\n  GetApp,\n  Reply,\n  DoneOutline,\n  Done,\n  AlarmOff\n} from \"@material-ui/icons/\";\nimport VolumeController from \"./VolumeController\";\nimport { useSongMethods } from \"../RenderDatabase\";\nimport SleepTimer from './SleepTimer'\nimport { GlobalContext } from \"../GlobalState\";\n\nconst DownloadLoader = withStyles({\n  root: {\n    height: 2,\n    width: \"70%\",\n    margin: \"0 auto\",\n    transform: \"translateY(-10px)\"\n  }\n})(LinearProgress);\n\nconst TopBar = ({ song, player, setPlayerState, history }) => {\n  const { snackbarMsg } = useContext(GlobalContext);\n  const [isSongDownloaded, setSongDownloaded] = useState(false);\n  const [isSongDownloading, setSongDownloading] = useState(false);\n\n  const {\n    handleDownload,\n    handleRemoveSong,\n    deleteDialogComponent\n  } = useSongMethods();\n\n  useEffect(() => {\n    if (snackbarMsg === \"Song Downloaded\" || song.audio) {\n      setSongDownloaded(true);\n      setSongDownloading(false);\n    }\n  }, [snackbarMsg]);\n  // if the song is downloaded we will change\n\n\n\n  const minimizePlayer = () => {\n    history.goBack()\n    setPlayerState(\"minimized\");\n  };\n\n  return (\n    <Grid\n      container\n      justify=\"space-between\"\n      direction=\"row\"\n      style={{\n        padding: \" 0 10px\",\n        marginTop: \"10px\",\n        position: \"absolute\",\n        top: \"0\"\n      }}\n    >\n      <VolumeController player={player} />\n      {deleteDialogComponent}\n\n      \n      <SleepTimer player={player}/>\n\n      <div>\n        {isSongDownloaded ? (\n          <DoneOutline\n            color=\"primary\"\n            onClick={() => handleRemoveSong(song.id)}\n          /> //song will be removed\n        ) : (\n          <>\n            <GetApp\n              color=\"primary\"\n              onClick={() => {\n                handleDownload(song.id);\n                setSongDownloading(true);\n              }}\n            />\n          </>\n        )}\n        {isSongDownloading ? <DownloadLoader color=\"primary\" /> : null}\n        {/* if the song is downloading we will show loading */}\n      </div>\n\n      <ExpandMore\n        onClick={minimizePlayer}\n        color=\"primary\"\n        fontSize=\"large\"\n        style={{ transform: \"translateY(-7px)\" }}\n      />\n    </Grid>\n  );\n};\n\nexport default TopBar;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport { SkipNext, Close } from \"@material-ui/icons\";\nimport PlayPauseButton from \"./PlayPauseButton\";\nimport \"./MiniMusicStyle.css\";\n\nconst styles = {};\n\nconst MiniMuiscArt = ({ playPause, data, playNext, emptyPlayer }) => {\n  const getThumbnail = () => {\n    // if the thumbnail is downloaded then get it from database or else use the url to fetch\n    if (data.thumbnail) {\n      return window.URL.createObjectURL(data.thumbnail);\n    } else {\n      return data.sdThumbnail;\n    }\n  };\n\n  return (\n    <div className={\"mainContainer\"}>\n      <div className={\"overflow-hidden\"}>\n        <div className=\"details\">\n          <Typography variant=\"body1\">{data.title}</Typography>\n          <Typography variant=\"body2\">{data.channelTitle}</Typography>\n        </div>\n        <div className=\"buttons\">\n          <SkipNext onClick={playNext} />\n          <Close onClick={emptyPlayer} />\n        </div>\n        <div className={\"miniArtContainer\"}>\n          <div className={\"mainArt\"}>\n            <img\n              className={\"miniArtImg\"}\n              src={getThumbnail()}\n              alt=\"music art\"\n            />\n            <PlayPauseButton\n              player={playPause.player}\n              minimized={playPause.minimized}\n              audioState={playPause.audioState}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MiniMuiscArt;\n","import axios from \"axios\";\n\nconst country_code = localStorage.getItem(\"country_code\");\n\n// const key = \"02924c9a5a777f4d4854a45a326432c6\";\n\nconst GeoAPI = \"https://ipapi.co/json/\";\n\nconst fetchCountry = async () => {\n  const res = await axios.get(GeoAPI, { mode: \"no-cors\" });\n  //   set the current country code in local stoarge\n  localStorage.setItem(\"country_code\", res.data.country);\n};\n\nif (!country_code) {\n  // if country is not set then only set it\n  fetchCountry();\n}\n","import React, { useEffect, useContext, useState, useRef } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { useSwipeable } from \"react-swipeable\";\nimport PlayPauseButton from \"./PlayPauseButton\";\nimport NextButton from \"./NextButton\";\nimport PreviousButton from \"./PreviousButton\";\nimport MusicArt from \"./MusicArt\";\nimport TimelineController from \"./TimelineController\";\nimport TopBar from \"./TopBar\";\nimport MiniMusicArt from \"./MiniMusicArt\";\nimport RelatedVideos from \"../RelatedVideos\";\nimport getAudioLink from \"../../apis/getAudioLink\";\nimport youtubeSearch from \"../../apis/youtubeSearch\";\nimport { updatePlayingSong } from \"../../external/saveSong\";\n\nimport \"../../external/saveCountry\";\n\nimport \"../../style.css\";\n\nimport { GlobalContext } from \"../GlobalState\";\n\n// window.onbeforeunload = function() {\n//   return 'You have unsaved changes!';\n// }\nlet relatedVideosVar;\n\nconst MainPlayer = ({ location, history }) => {\n  let params = new URLSearchParams(location.search);\n\n  const [{ currentVideoSnippet, themeSelectValue }, dispatch] = useContext(\n    GlobalContext\n  );\n\n  const setCurrentVideoSnippet = data => {\n    dispatch({ type: \"setCurrentVideoSnippet\", snippet: data });\n  };\n\n  const [relatedVideos, setRelatedVideos] = useState([]);\n  const [isItFromPlaylist, setIsItFromPlaylist] = useState(false);\n  //\n  const [audioState, setAudioState] = useState(null);\n  // there will be 4 states\n  // loading, loaded, playing, paused\n\n  const [playerState, setPlayerState] = useState(null);\n  // there will be 3 states\n  // maximized, minimized, playlist\n\n  const [minimized, setMinimized] = useState(true);\n  const [isRepeatOn, setIsRepeatOn] = useState(false);\n  const [rating, setRating] = useState(\"none\");\n  const [isNextFromMini, setIsNextFromMini] = useState(false);\n  const [audioURL, setAudioURL] = useState(null);\n  const body = document.querySelector(\"body\");\n\n  const audioPlayer = useRef();\n  const player = audioPlayer.current;\n  const setupMediaSessions = () => {\n    if (\"mediaSession\" in navigator) {\n      console.log(\"navigator setupped\");\n\n      navigator.mediaSession.metadata = new window.MediaMetadata({\n        title: currentVideoSnippet.title,\n        artist: currentVideoSnippet.channelTitle,\n        artwork: [\n          {\n            src: currentVideoSnippet.sdThumbnail,\n            sizes: \"512x512\",\n            type: \"image/png\"\n          }\n        ]\n      });\n      navigator.mediaSession.setActionHandler(\"play\", () => {\n        /* Code excerpted. */\n        playAudio();\n      });\n      navigator.mediaSession.setActionHandler(\"pause\", () => {\n        /* Code excerpted. */\n        audioPlayer.current.pause();\n      });\n      navigator.mediaSession.setActionHandler(\"previoustrack\", () => {\n        playPrevious();\n      });\n      navigator.mediaSession.setActionHandler(\"nexttrack\", () => {\n        playNext();\n      });\n    }\n  };\n\n  const playAudio = () => {\n    audioPlayer.current\n      .play()\n      .then(_ => {\n        // Automatic playback started!\n        // Show playing UI.\n        console.log(\"audio played auto\");\n        setupMediaSessions();\n      })\n      .catch(error => {\n        // Auto-play was prevented\n        // Show paused UI.\n        console.log(\"playback prevented\");\n        setAudioState(\"paused\");\n      });\n  };\n\n  useEffect(() => {\n    console.log(\"state changed triggedred\");\n    const getAudio = async data => {\n      // audioPlayer.current.src = \"\";\n      // maximize the player every time id changes\n      // only if playlist is not open\n      if (playerState !== \"playlist\" && !isNextFromMini) {\n        setPlayerState(\"maximized\");\n        //\n        console.log(\"maximizing here yar and state is\", playerState);\n      }\n\n      setTimeout(() => {\n        setIsNextFromMini(false);\n        // change it back to false\n      }, 200);\n\n      setAudioState(\"loading\");\n      const res = await getAudioLink.get(\"/song\", {\n        params: { id: data }\n      });\n\n      audioPlayer.current.src = res.data;\n      playAudio();\n\n      // var audioContext = new AudioContext();\n\n      // var track = audioContext.createMediaElementSource(audioPlayer.current);\n      // track.connect(audioContext.destination);\n    };\n\n    if (currentVideoSnippet.audio) {\n      console.log(\"yes its downloaded we will play from local file\");\n      // maximize the player every time id changes\n\n      setPlayerState(\"maximized\");\n      setAudioState(\"loading\");\n      audioPlayer.current.src = window.URL.createObjectURL(\n        currentVideoSnippet.audio\n      );\n      playAudio();\n    } else if (currentVideoSnippet.id) {\n      getAudio(currentVideoSnippet.id);\n    }\n\n    if (currentVideoSnippet.id) {\n      const searchRelated = async () => {\n        const res = await youtubeSearch.get(\"/search\", {\n          params: {\n            relatedToVideoId: currentVideoSnippet.id,\n            maxResults: 10\n          }\n        });\n        setRelatedVideos(res.data.items);\n      };\n\n      // if its not from the mini next button then only change history\n      if (!isNextFromMini) {\n        // if the click is not from playlist then only we will search for realated video\n        if (!isItFromPlaylist) {\n          // console.log(\"searching for related vids\", relatedVideos);\n          // if player is in playlist mode we will just replace history else push it\n          if (location.pathname !== \"/play\") {\n            // prevent duplicating history\n            history.push(`/play?id=${currentVideoSnippet.id}`);\n          }\n\n          searchRelated();\n        } else {\n          history.replace(`/play?id=${currentVideoSnippet.id}`);\n          setIsItFromPlaylist(false);\n        }\n      }\n\n      console.log(currentVideoSnippet);\n    }\n\n    // set rating to none when we load new song\n    setRating(\"none\");\n  }, [currentVideoSnippet, setIsItFromPlaylist]);\n\n  // useEffect(() => {\n  //   console.log(\"from playlist\", isItFromPlaylist);\n  // }, [isItFromPlaylist]);\n\n  useEffect(() => {\n    relatedVideosVar = relatedVideos;\n    console.log(\"related\", relatedVideos);\n  }, [relatedVideos]);\n\n  useEffect(() => {\n    console.log(\"isnext state\", isNextFromMini);\n  }, [isNextFromMini]);\n\n  const setAudioSrcAndPlay = async id => {\n    const res = await getAudioLink.get(\"/song\", {\n      params: { id: id }\n    });\n\n    // set the audio data\n    audioPlayer.current.src = res.data;\n    playAudio();\n  };\n\n  const setVideoSnippet = video => {\n    setCurrentVideoSnippet({\n      id: video.id.videoId,\n      title: video.snippet.title,\n      channelTitle: video.snippet.channelTitle,\n      maxThumbnail: `https://img.youtube.com/vi/${video.id.videoId}/hqdefault.jpg`,\n      sdThumbnail: `https://img.youtube.com/vi/${video.id.videoId}/sddefault.jpg`\n      // this is the url of the max resolution of thumbnail\n    });\n\n    // if window is minimized then only we will run this function\n    if (document.hidden) {\n      setAudioSrcAndPlay(video.id.videoId);\n    }\n  };\n\n  const playNext = () => {\n    // also set this is from playlist\n    setIsItFromPlaylist(true);\n    console.log(\"play next related videos\", relatedVideos);\n    // find the index of playing song in the playlist\n    const currentIndex = relatedVideosVar.findIndex(\n      video => video.id.videoId === currentVideoSnippet.id\n    );\n    console.log(\"the current index is\", currentIndex);\n\n    let video;\n    console.log(\"hey we will play next song\");\n    video = relatedVideosVar[currentIndex + 1]; //we will play the next song\n\n    setVideoSnippet(video);\n  };\n\n  const playPrevious = () => {\n    setIsItFromPlaylist(true);\n\n    // if the player time is greater than 5 sec we will move the time to 0\n    if (player.currentTime > 5) {\n      player.currentTime = 0;\n    } else {\n      const currentIndex = relatedVideosVar.findIndex(\n        video => video.id.videoId === currentVideoSnippet.id\n      );\n      let video;\n      if (currentIndex !== -1) {\n        video = relatedVideosVar[currentIndex - 1]; //we will play the next song\n        setVideoSnippet(video);\n      } else {\n        player.currentTime = 0;\n      }\n    }\n  };\n\n  let playerStyle = {\n    position: \"fixed\",\n    right: 0,\n    bottom: 0,\n    background: \"#fff\",\n    width: \"100%\",\n    height: \"100%\",\n    zIndex: 1400,\n    display: \"inline block\",\n    transition: \"all .3s ease\"\n  };\n\n  if (playerState === \"minimized\") {\n    playerStyle.transform = \"translateY(calc(100% - 106px))\";\n    playerStyle.zIndex = 0;\n    // if theme is not dark then only apply the pink style\n    if (themeSelectValue === \"Dark\") {\n      playerStyle.background = \"#333\";\n    } else {\n      playerStyle.background = \"#e91e63\";\n    }\n    // playerStyle.bottom = \"48px\";\n    // calculate the top height and we are subtracting 148px becz\n    // 48 is the value of menu bar and 100px is minimized height\n    // make body overflow scroll 😝\n    body.style.overflow = \"auto\";\n  }\n\n  if (playerState === \"maximized\") {\n    // make body overflow hidden 🙈\n    body.style.overflow = \"hidden\";\n    if (themeSelectValue === \"Dark\") {\n      playerStyle.background = \"#333\";\n    }\n  }\n\n  if (playerState === \"playlist\") {\n    playerStyle.transform = \"translateY(-418px)\";\n  }\n\n  const expandPlayer = () => {\n    if (playerState === \"minimized\") {\n      setPlayerState(\"maximized\");\n      setMinimized(true);\n      history.push({\n        pathname: \"/play\",\n        search: `?id=${currentVideoSnippet.id}`,\n        state: { modal: true }\n      });\n    }\n  };\n\n  const toggleMaxPlaylist = () => {\n    if (playerState === \"playlist\") {\n      setPlayerState(\"maximized\");\n    } else {\n      setPlayerState(\"playlist\");\n    }\n    console.log(\"Maximize the playlist\");\n  };\n\n  const updateSongDB = async () => {\n    const rating = await updatePlayingSong(currentVideoSnippet);\n    //  it will update song on db and return the rating\n    setRating(rating);\n    console.log(rating);\n  };\n\n  // this will be fired when song is ended\n  const songEnded = () => {\n    // if repeat is false we will play next else just set the time to 0\n    if (!isRepeatOn) {\n      playNext();\n    } else {\n      audioPlayer.current.currentTime = 0;\n      playAudio();\n    }\n  };\n\n  let initPosition = 0;\n  const containerRef = useRef(null);\n\n  const swipeHandlerMaximized = useSwipeable({\n    onSwipedDown: e => {\n      setPlayerState(\"minimized\");\n      history.goBack();\n    },\n    onSwiping: e => {\n      // console.log(e);\n      // getting the event for touches to extract the position\n      if (initPosition === 0) {\n        initPosition = e.event.changedTouches[0].screenY;\n      }\n\n      const screenY = e.event.changedTouches[0].screenY;\n      let positionDifference = Math.round(screenY - initPosition);\n      if (positionDifference < 1) {\n        positionDifference = 0;\n      }\n\n      const containerRefStyle = containerRef.current.style;\n      containerRefStyle.transform = `translateY(${positionDifference}px)`;\n      containerRefStyle.transition = \"none\";\n    },\n    onSwiped: e => {\n      initPosition = 0;\n      containerRef.current.style = \"\";\n      // we will make the initial position 0 again after user leaves the screen\n    },\n    onSwipedUp: e => {\n      if (playerState === \"minimized\") {\n        setPlayerState(\"maximized\");\n      }\n    },\n    onSwipedRight: e => {\n      const playTimeout = setTimeout(() => {\n        clearTimeout(playTimeout);\n        playNext();\n      }, 250);\n    },\n    onSwipedLeft: e => {\n      const playTimeout = setTimeout(() => {\n        clearTimeout(playTimeout);\n        playPrevious();\n      }, 250);\n    }\n  });\n\n  const swipeHandlerMin = useSwipeable({\n    onSwipedUp: e => {\n      expandPlayer();\n    }\n  });\n\n  useEffect(() => {\n    if (location.pathname === \"/play\" && !currentVideoSnippet.id) {\n      console.log(\"history is in play fetching song\");\n\n      fetchAndSetCurrentVideoSnippet(params.get(\"id\")); // math will give the song id from\n    }\n    // we will only change if its push  otherwise while changing song from playlist changes the state\n\n    // Listen for changes to the current location.\n    const unlisten = history.listen(location => {\n      // location is an object like window.location\n      if (location.pathname === \"/play\") {\n        // we will only change if its push  otherwise while changing song from playlist changes the state\n        if (history.action !== \"REPLACE\") {\n          setPlayerState(\"maximized\");\n          console.log(\"set player state to maximized\");\n        }\n      } else {\n        setPlayerState(\"minimized\");\n        console.log(\"set player state to minimized\");\n      }\n      console.log(history);\n    });\n  }, [history]);\n\n  useEffect(() => {\n    console.log(playerState);\n  }, [playerState]);\n\n  const returnMinMaxClass = () => {\n    if (playerState === \"minimized\") {\n      return \"playerMinimized\";\n    } else if (playerState === \"playlist\") {\n      return \"playerPlaylist\";\n    }\n  };\n\n  const returnMaximizedPlayer = () => {\n    if (playerState === \"maximized\" || playerState === \"playlist\") {\n      return (\n        <>\n          <Grid\n            container\n            direction=\"column\"\n            className=\"main-player-inner\"\n            style={{\n              height: \" calc(100vh - 46px)\",\n              justifyContent: \"space-evenly\"\n            }}\n          >\n            <TopBar\n              song={currentVideoSnippet}\n              player={player}\n              setPlayerState={setPlayerState}\n              history={history}\n            />\n            <div {...swipeHandlerMaximized} className=\"musicArtContainer\">\n              <MusicArt\n                data={currentVideoSnippet}\n                rating={rating}\n                audioEl={player}\n              />\n            </div>\n            <TimelineController audioState={audioState} player={player} />\n\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-evenly\"\n              alignItems=\"center\"\n              style={{ maxWidth: \"290px\", height: \"80px\", margin: \"0 auto\" }}\n            >\n              <PreviousButton playPrevious={playPrevious} />\n              <PlayPauseButton player={player} audioState={audioState} />\n              <NextButton onPlayNext={playNext} />\n            </Grid>\n          </Grid>\n          <RelatedVideos\n            toggleMaxPlaylist={toggleMaxPlaylist}\n            setPlaylist={() => setIsItFromPlaylist(true)}\n            playerState={playerState}\n            relatedVideos={relatedVideos}\n            setRelatedVideos={data => setRelatedVideos(data)}\n            isRepeatOn={isRepeatOn}\n            // this will set the repeat setting\n            setIsRepeatOn={() => {\n              setIsRepeatOn(!isRepeatOn);\n            }}\n          />\n        </>\n      );\n    }\n  };\n\n  const returnMinimizedPlayer = () => {\n    if (playerState === \"minimized\" && currentVideoSnippet.id) {\n      return (\n        <div {...swipeHandlerMin}>\n          <MiniMusicArt\n            // we are making an object for props we will pass it to play pause button through mini music art\n            playPause={{\n              player: player,\n              minimized: minimized,\n              audioState: audioState\n            }}\n            playNext={e => {\n              e.stopPropagation();\n              setIsNextFromMini(true);\n              playNext();\n            }}\n            data={currentVideoSnippet}\n            emptyPlayer={e => {\n              e.stopPropagation();\n              setCurrentVideoSnippet([]);\n            }}\n          />\n          <TimelineController\n            audioState={audioState}\n            player={player}\n            minimized={minimized}\n          />\n        </div>\n      );\n    }\n  };\n\n  const fetchAndSetCurrentVideoSnippet = id => {\n    youtubeSearch\n      .get(\"videos\", {\n        params: {\n          id: id\n        }\n      })\n      .then(res => {\n        const item = res.data.items[0];\n        console.log(currentVideoSnippet);\n        setCurrentVideoSnippet({\n          id: item.id,\n          title: item.snippet.title,\n          channelTitle: item.snippet.channelTitle,\n          maxThumbnail: `https://img.youtube.com/vi/${item.id}/maxresdefault.jpg`,\n          sdThumbnail: `https://img.youtube.com/vi/${item.id}/sddefault.jpg`\n          // this is the url of the max resolution of thumbnail\n        });\n      });\n  };\n\n  if (!currentVideoSnippet.id) {\n    return null;\n  }\n\n  return (\n    <div\n      // drag=\"y\"\n      // dragConstraints={{ top: 0, bottom: 600 }}\n      ref={containerRef}\n      // style={playerStyle}\n      onClick={expandPlayer}\n      className={\"mediaPlayerContainer \" + returnMinMaxClass()}\n    >\n      {returnMaximizedPlayer()}\n      {returnMinimizedPlayer()}\n      <audio\n        // onTimeUpdate={timeUpdate}\n        onLoadStart={() => {\n          setAudioState(\"loading\");\n        }}\n        id=\"audio-element\"\n        onLoadedData={updateSongDB}\n        // crossOrigin=\"anonymous\"\n        onPlay={() => setAudioState(\"playing\")}\n        onPlaying={() => setAudioState(\"playing\")}\n        onPause={() => setAudioState(\"paused\")}\n        onEnded={songEnded}\n        autoPlay\n        ref={audioPlayer}\n        // type=\"audio/mp4\"\n      />\n    </div>\n  );\n};\n\nexport default MainPlayer;\n","import React, {\n  useContext,\n  useState,\n  useEffect,\n  useCallback,\n  Suspense,\n  lazy\n} from \"react\";\n\nimport {\n  BrowserRouter as Router,\n  withRouter,\n  Route,\n  Link,\n  Switch\n} from \"react-router-dom\";\n\nimport { AnimatePresence } from \"framer-motion\";\n\nimport {\n  Tabs,\n  Tab,\n  withStyles,\n  Grid,\n  CircularProgress\n} from \"@material-ui/core\";\n\n\nimport {\n  Home,\n  Favorite,\n  History,\n  GetApp\n} from \"@material-ui/icons/\";\n\nimport { GlobalContext } from \"./GlobalState\";\nimport {\n  getHistory,\n  getLikedSongs,\n  getDownloadedSongs,\n  removeDownloadingState,\n  db\n} from \"../external/saveSong\";\n\nimport SettingsPage from \"./sections/SettingsPage\";\n// import the db from save song\nimport MainPlayer from \"../components/player/MainPlayer\";\n// pages\nconst LoginPage = lazy(() => import(\"./LoginPage\"));\nconst RenderDatabase = lazy(() => import(\"./RenderDatabase\"));\nconst SearchResult = lazy(() => import(\"./SearchResult\"));\nconst HomePage = lazy(() => import(\"./sections/HomePage\"));\n\n\n// custom styling the tab menus\nconst CustomTab = withStyles({\n  root: {\n    background: \"#3f51b5\",\n    position: \"fixed\",\n    bottom: \"0\",\n    padding: 0,\n    width: \"100%\",\n    zIndex: 1300\n  },\n  indicator: {\n    display: \"none\"\n  },\n  labelIcon: {\n    margin: 0\n  }\n})(Tabs);\n\nconst CustomTabs = withStyles({\n  root: {\n    color: \"#00b0ff\",\n    fontSize: \".75rem\",\n    margin: 0,\n\n    \"&:hover\": {\n      color: \"#ffffffed\",\n      opacity: 1\n    },\n    \"&$selected\": {\n      color: \"#fff\"\n    },\n    \"&:focus\": {\n      color: \"#FFFFFF\"\n    }\n  },\n\n  selected: {}\n})(Tab);\n\nlet deferredPrompt = undefined;\nlet previousLocation;\n\nwindow.addEventListener(\"beforeinstallprompt\", e => {\n  // Stash the event so it can be triggered later.\n  deferredPrompt = e;\n});\n\nconst CurrentSection = ({ history, location }) => {\n  const [{ currentVideoSnippet, searchResult }] = useContext(GlobalContext);\n  console.log(currentVideoSnippet);\n\n  const [songsHistoryState, setSongsHistory] = useState([]);\n  const [songsLikedState, setSongsLiked] = useState([]);\n  const [songsDownloadedState, setSongsDownloaded] = useState([]);\n  const [tabValue, setTabValue] = useState(0);\n  const [updateCount, setUpdateCount] = useState(0);\n  const [redirectState, setRedirectState] = useState(null);\n\n  const circularLoader = (\n    <Grid\n      style={{ height: \"100vh\" }}\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n    >\n      <CircularProgress />\n    </Grid>\n  );\n\n  function handleChange(event, newValue) {\n    setTabValue(newValue);\n  }\n\n  const fetchSongs = useCallback(async () => {\n    //it's same as the orders of our tabs\n    switch (tabValue) {\n      case 1:\n        setSongsLiked(await getLikedSongs());\n        break;\n\n      case 2:\n        setSongsDownloaded(await getDownloadedSongs());\n        break;\n\n      case 3:\n        setSongsHistory(await getHistory());\n        break;\n\n      default:\n        break;\n    }\n  }, [tabValue]);\n  //\n  useEffect(() => {\n    fetchSongs();\n  }, [tabValue, fetchSongs]);\n\n  useEffect(() => {\n    fetchSongs();\n    console.log(\"fetching the songs\");\n  }, [updateCount, fetchSongs]);\n\n  useEffect(() => {\n    db.on(\"changes\", () => {\n      setUpdateCount(c => c + 1);\n    });\n    // will remove all the songs which are downloading in the first place\n    removeDownloadingState();\n\n    const isThisNewUser = localStorage.getItem(\"isThisNew\");\n    if (isThisNewUser === \"no\") {\n      setRedirectState(true);\n    }\n    // if this is not a new user redirect it to home\n    previousLocation = location;\n    history.listen(location => {\n      if (location.pathname !== \"/play\") {\n        previousLocation = location;\n        console.log(previousLocation);\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    // we will redirect everytime user comes to root page\n    if (redirectState && history.location.pathname === \"/\") {\n      history.replace(\"/home\");\n    }\n\n    // if the location is not play then we will push new location\n  }, [setRedirectState, history, redirectState]);\n\n  const checkPrevLocation = () => {\n    if (location.pathname === \"/play\") {\n      return previousLocation;\n    } else {\n      return location;\n    }\n  };\n\n  // we will load the homepage with all the playlists\n  const continueToHome = () => {\n      localStorage.setItem(\"isThisNew\", \"no\");\n      history.replace(\"/home\");\n    \n\n    if (deferredPrompt) {\n      // show the prompt to install app\n      deferredPrompt.prompt();\n      // Wait for the user to respond to the prompt\n      deferredPrompt.userChoice.then(choiceResult => {\n        if (choiceResult.outcome === \"accepted\") {\n          console.log(\"User accepted the A2HS prompt\");\n        } else {\n          console.log(\"User dismissed the A2HS prompt\");\n        }\n        deferredPrompt = null;\n      });\n    }\n  };\n\n  const returnMainPlayer = props => {\n    // we will return the main player if the path is not the \"/\"\n\n    if (window.location.pathname !== \"/\") {\n      return <MainPlayer  {...props} />;\n    } else {\n      return null;\n    }\n  };\n\n  // the set tab value will keep the tab active on their route\n  // there are 4 tabs so there will be 3 indexes\n  return (\n    <div>\n      <Suspense fallback={circularLoader}>\n        <Switch location={checkPrevLocation()}>\n          <Route\n            exact\n            path=\"/\"\n            render={props => {\n              return <LoginPage continueToHome={continueToHome} />;\n            }}\n          />\n          <Route\n            path=\"/search\"\n            render={props => <SearchResult videos={searchResult} />}\n          />\n          <Route\n            path=\"/home\"\n            render={props => {\n              setTabValue(0);\n              return <HomePage />;\n            }}\n          />\n          <Route\n            path=\"/liked\"\n            render={props => {\n              setTabValue(1);\n              return (\n                <RenderDatabase\n                  songs={songsLikedState}\n                  {...props}\n                  key={location.pathname}\n                />\n              );\n            }}\n          />\n          <Route\n            path=\"/downloads\"\n            render={props => {\n              setTabValue(2);\n              return (\n                <RenderDatabase\n                  songs={songsDownloadedState}\n                  key={location.pathname}\n                />\n              );\n            }}\n          />\n          <Route\n            path=\"/history\"\n            render={props => {\n              setTabValue(3);\n              return (\n                <RenderDatabase\n                  songs={songsHistoryState}\n                  key={location.pathname}\n                />\n              );\n            }}\n          />\n          <Route\n            path=\"/app\"\n            render={props => {\n              window.location.replace(\n                \"https://play.google.com/store/apps/details?id=com.ylightmusic.app\"\n              );\n              return <div>Redirecting you to play store</div>;\n            }}\n          />\n\n          <Route path=\"/settings\" component={SettingsPage} />\n        </Switch>\n        <Route path=\"/\" render={props => returnMainPlayer(props)} />\n\n        <div style={{ height: currentVideoSnippet.id ? \"100px\" : \"50px\" }} />\n      </Suspense>\n      {/* if the player is on then return 100px else 50px*/}\n      <CustomTab\n        value={tabValue}\n        onChange={handleChange}\n        variant=\"fullWidth\"\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n      >\n        <CustomTabs\n          icon={<Home />}\n          aria-label=\"Home\"\n          component={Link}\n          to=\"/home\"\n          label=\"Home\"\n        />\n\n        <CustomTabs\n          icon={<Favorite />}\n          aria-label=\"Liked\"\n          component={Link}\n          to=\"/liked\"\n          label=\"Liked\"\n        />\n\n        <CustomTabs\n          icon={<GetApp />}\n          aria-label=\"Downloads\"\n          component={Link}\n          to=\"/downloads\"\n          label=\"Downloads\"\n        />\n        <CustomTabs\n          icon={<History />}\n          aria-label=\"History\"\n          component={Link}\n          to=\"/history\"\n          label=\"History\"\n        />\n      </CustomTab>\n    </div>\n  );\n};\n\nexport default withRouter(CurrentSection);\n","import React, { useEffect, useContext } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport SimpleAppBar from \"./header/SimpleAppBar\";\nimport SwipeMenu from \"./SwipeMenu\";\nimport CurrentSection from \"./CurrentSection\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport { indigo } from \"@material-ui/core/colors\";\n\nimport { useCheckDarkmode } from \"./sections/SettingsPage\";\nimport { GlobalContext } from \"./GlobalState\";\n\nconst body = document.querySelector(\"body\");\n\nconst defaultTheme = {\n  palette: {\n    primary: indigo,\n    secondary: {\n      main: \"#000000\"\n    }\n  },\n  typography: {\n    useNextVariants: true\n  }\n};\n\nconst darkTheme = {\n  palette: {\n    type: \"dark\",\n    primary: indigo,\n    secondary: {\n      main: \"#ffffff\"\n    }\n  },\n  typography: {\n    useNextVariants: true\n  }\n};\n\nconst muiDarkTheme = createMuiTheme(darkTheme);\nconst muiDefaultTheme = createMuiTheme(defaultTheme);\n\nconst AppContainer = () => {\n  const [{ themeSelectValue }, dispatch] = useContext(GlobalContext);\n\n  const { checkDarkMode } = useCheckDarkmode();\n\n  useEffect(() => {\n    checkDarkMode();\n\n    if (navigator.userAgent.match(/Android/i)) {\n      body.style.overscrollBehavior = \"none\";\n      // this is to disable pull refresh on android\n    }\n  }, []);\n\n  useEffect(() => {\n    if (themeSelectValue === \"Dark\") {\n      body.classList.add(\"dark\");\n    } else {\n      body.classList.remove(\"dark\");\n    }\n  }, [themeSelectValue]);\n\n  return (\n    <MuiThemeProvider\n      theme={themeSelectValue === \"Dark\" ? muiDarkTheme : muiDefaultTheme}\n    >\n      <Router>\n        <SimpleAppBar />\n        <Route component={CurrentSection} />\n\n        <SwipeMenu />\n      </Router>\n       \n    </MuiThemeProvider>\n  );\n};\nexport default AppContainer;\n","import React from \"react\";\n\nimport \"typeface-roboto\";\nimport { GlobalState } from \"./GlobalState\";\nimport AppContainer from \"./AppContainer\";\n\nfunction App() {\n  return (\n    <GlobalState>\n      <AppContainer/>\n    </GlobalState>\n  );\n}\n\nexport default App;\n\n// this do not works","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { useReducer } from \"react\";\n\nexport const GlobalContext = React.createContext();\n\nconst initialState = {\n  searchState: \"home\",\n  searchResult: [],\n  relatedVideos: [],\n  menuOpen: false,\n  snackbarMsg: false,\n  currentVideoSnippet: {},\n  themeSelectValue: \"Default\"\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"setCurrentVideoSnippet\":\n      return {\n        ...state,\n        currentVideoSnippet: action.snippet\n      };\n\n    case \"setRelatedVideos\": {\n      return {\n        ...state,\n        relatedVideos: action.snippet\n      };\n    }\n    case \"setSnackbarMsg\": {\n      return {\n        ...state,\n        snackbarMsg: action.snippet\n      };\n    }\n    case \"setThemeSelectValue\": {\n      return {\n        ...state,\n        themeSelectValue: action.snippet\n      };\n    }\n    case \"setSearchState\": {\n      return {\n        ...state,\n        searchState: action.snippet\n      };\n    }\n    case \"setSearchResult\": {\n      return {\n        ...state,\n        searchResult: action.snippet\n      };\n    }\n    case \"setMenuOpen\": {\n      return {\n        ...state,\n        menuOpen: action.snippet\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const GlobalState = props => {\n  const globalState = useReducer(reducer, initialState);\n  return (\n    <GlobalContext.Provider value={globalState}>\n      {props.children}\n    </GlobalContext.Provider>\n  );\n};\n","import Dexie from \"dexie\";\nimport \"dexie-observable\";\n\n\n// Define your database\nexport const db = new Dexie(\"Song_Database\");\n\n// create new databse\n// our schema is of storing a song\ndb.version(1).stores({\n  songs:\n    \"&videoId, timestamp, playbackTimes, [rating+timestamp], [downloadState+timestamp]\"\n});\n\ndb.version(2).stores({});\n\n// add or update song on play\nexport const updatePlayingSong = async data => {\n  const videoObj = {\n    videoId: data.id,\n    timestamp: Date.now(),\n    title: data.title,\n    channelTitle: data.channelTitle,\n    playbackTimes: 1\n  };\n\n  const song = await db.songs.get({ videoId: data.id });\n  // if song exists we will just update the timestamp and the playback\n  if (song) {\n    db.songs.update(data.id, {\n      timestamp: Date.now(),\n      playbackTimes: song.playbackTimes + 1\n    });\n    console.log(\"song updated\");\n    return song.rating;\n    // return the rating\n  } else {\n    // we will add a new song\n    console.log(\"song added\");\n    db.songs.add(videoObj);\n  }\n};\n\n// like or dislike a song on database\nexport const rateSong = async (id, rating) => {\n  // if user likes the song then only download it\n\n  db.songs.update(id, {\n    rating: rating\n  });\n};\n\nexport const getHistory = async () => {\n  const songsByTimeStamp = await db.songs\n    .orderBy(\"timestamp\")\n    .limit(500)\n    .reverse()\n    .toArray();\n  return songsByTimeStamp;\n};\n\nexport const getLikedSongs = async () => {\n  const likedSongs = await db.songs\n    .where(\"[rating+timestamp]\") //this will filter song based on time and liked\n    .between([\"liked\", Dexie.minKey], [\"liked\", Dexie.maxKey])\n    .reverse()\n    .toArray();\n  return likedSongs;\n};\n\nexport const getDownloadedSongs = async () => {\n  const downloadedSongs = await db.songs\n    .where(\"[downloadState+timestamp]\") //this will filter song based on time and downloaded\n    .between([\"downloaded\", Dexie.minKey], [\"downloaded\", Dexie.maxKey])\n    .reverse()\n    .toArray();\n  return downloadedSongs;\n};\n\nexport const removeDownloadingState = async () => {\n  // find all the downloadState which is downloading and remove that\n  const songs = await db.songs\n    .where(\"[downloadState+timestamp]\")\n    .between([\"downloading\", Dexie.minKey], [\"downloading\", Dexie.maxKey])\n    .modify(x => {\n      delete x.downloadState;\n    });\n  console.log(songs);\n};\n\nexport const downloadSong = async (id, url) => {\n  try {\n    db.songs.update(id, {\n      downloadState: \"downloading\"\n    });\n    const thumbURL = `https://i.ytimg.com/vi/${id}/hqdefault.jpg`;\n    const [thumbnailBlob, songBlob] = await Promise.all([\n      fetchProxiedBlob(thumbURL),\n      fetchProxiedBlob(url)\n    ]);\n    db.songs.update(id, {\n      downloadState: \"downloaded\",\n      thumbnail: thumbnailBlob,\n      audio: songBlob\n    });\n    return \"downloaded\";\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const deleteSongAudio = async id => {\n  await db.songs.where({ videoId: id }).modify(x => {\n    delete x.audio;\n    delete x.downloadState;\n  });\n  return \"song deleted\";\n};\n\nfunction fetchProxiedBlob(url) {\n  const URL = url;\n  return new Promise(function (resolve, reject) {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", \"https://server.ylight.xyz/proxy/\" + URL);\n    xhr.responseType = \"blob\";\n    xhr.onload = function () {\n      var status = xhr.status;\n      if (status >= 200 && status < 300) {\n        resolve(xhr.response);\n      } else {\n        reject({\n          status: status,\n          statusText: xhr.statusText\n        });\n      }\n    };\n    xhr.send();\n    setTimeout(() => {\n      xhr.abort();\n      xhr.open(\"GET\", \"https://server.moodifymusic.tech/proxy/\" + URL);\n\n      xhr.send();\n    }, 1000);\n  });\n}\n","import axios from \"axios\";\n\n// put your api keys in .env file you can get those here - https://developers.google.com/youtube/v3/getting-started\nexport const selectRandomKey = () => {\n  const keys = process.env.REACT_APP_YouTube_Keys.split(\" \"); //we are splitting the api keys to make an array\n  const random = Math.floor(Math.random() * Math.floor(keys.length)); //this will get a random number\n  return keys[random];\n};\n\nexport default axios.create({\n  baseURL: \"https://www.googleapis.com/youtube/v3\",\n  params: {\n    part: \"snippet\",\n    videoCategoryId: \"10\",\n    type: \"video\",\n    key: selectRandomKey()\n  }\n});\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://server.ylight.xyz',\n  // baseURL: 'https://ylight.glitch.me',\n});\n"],"sourceRoot":""}